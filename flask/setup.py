# coding: utf-8

import sys
from setuptools import setup, find_packages

NAME = "swagger_server"
VERSION = "1.0.0"
# To install the library, run the following
#
# python setup.py install
#
# prerequisite: setuptools
# http://pypi.python.org/pypi/setuptools

REQUIRES = ["connexion"]

setup(
    name=NAME,
    version=VERSION,
    description="DICT API",
    author_email="suporte.ti@bcb.gov.br",
    url="",
    keywords=["Swagger", "DICT API"],
    install_requires=REQUIRES,
    packages=find_packages(),
    package_data={'': ['swagger/swagger.yaml']},
    include_package_data=True,
    entry_points={
        'console_scripts': ['swagger_server=swagger_server.__main__:main']},
    long_description="""\
    O Diretório de Identificadores de Contas Transacionais - DICT - é o serviço do arranjo PIX que permite  buscar detalhes de contas transacionais  com chaves de endereçamento mais convenientes para quem faz  um pagamento. Entre os tipos de chave atualmente disponíveis estão CPF, CNPJ, telefone, e-mail e EVP. As informações retornadas pelo DICT permitem ao pagador confirmar a identidade do recebedor, proporcionando  uma experiência mais fácil e segura. Permitem também ao PSP do pagador criar a mensagem de instrução de  pagamento a ser enviada para o sistema de liquidação com os detalhes de conta do recebedor.  # Segurança ## Autenticação  O DICT utiliza autenticação mútua TLS.  As definições de autenticação para essa API estão especificados no  [manual de segurança PIX](https://www.bcb.gov.br/content/estabilidadefinanceira/forumpireunioes/Anexo%20IV%20-%20Manual%20de%20Seguranca%20PIX%20v2.0.pdf)  ## Assinatura digital Requisições que incluam ou alterem informações no DICT devem ser assinadas com  [XML Digital Signature](https://www.w3.org/2000/09/xmldsig) pelo participante que envia a requisição. Requisições de consulta não precisam ser assinadas. Respostas retornadas pelo DICT serão assinadas digitalmente.  As assinaturas **devem** ser validadas pelos clientes da API.   A assinatura será colocada no elemento &#x60;Signature&#x60; das requisições e respostas.  O &#x60;Signature&#x60; será [envelopado](https://www.w3.org/TR/xmldsig-core1/#def-SignatureEnveloped) pelo XML que está  sendo assinado (assinatura é um elemento filho).  Para mais detalhes sobre a forma de construir a assinatura, consulte o [manual de segurança PIX](https://www.bcb.gov.br/content/estabilidadefinanceira/forumpireunioes/Anexo%20IV%20-%20Manual%20de%20Seguranca%20PIX%20v2.0.pdf).  ## Limitação de requisições  Para previnir ataques de enumeração, há mecanismo de limitação da quantidade de consultas que podem ser feitas  num espaço de tempo (_rate-limiting_).  A limitação atua em dois níveis, para usuários individuais e para um participante como um todo.  Para cada um desses níveis, há limite para o número de consultas que não resultam em pagamento.  Quando algum desses limites for atingido, o serviço retornará status &#x60;429&#x60;, especificando a causa. Cabeçalhos indicando os parâmetros de _rate-limiting_ serão retornados nas requisições. Ver, por exemplo, os cabeçalhos retornados ao [consultar vínculo](#operation/getEntry).  # Evolução da API  As seguintes mudanças são esperadas e consideradas retro-compatíveis (_backwards-compatibility_):  - Adição de novos recursos na API. - Adição de novos parâmetros opcionais a requisições. - Adição de novos campos em respostas da API. - Alteração da ordem de campos. - Adição de novos elementos em enumerações  Mudanças compatíveis não geram nova versão da API.  Clientes devem estar preparados para lidar com essas mudanças sem quebrar.  Mudanças incompatíveis geram nova versão da API.  # Tratamento de erros  O DICT retorna códigos de status HTTP para indicar sucesso ou falhas das requisições.  Códigos 2xx indicam sucesso. Códigos 4xx indicam falhas causadas pelas informações  enviadas pelo cliente ou pelo estado atual das entidades. Códigos 5xx indicam problemas  no serviço no lado do DICT.  As respostas de erro incluem no corpo detalhes do erro seguindo o schema da RFC  [Problem Details for HTTP APIs](https://tools.ietf.org/html/rfc7807).     O campo &#x60;type&#x60; identifica o tipo de erro e no DICT segue o padrão:  &#x60;https://dict.pi.rsfn.net.br/api/v1/error/&lt;TipoErro&gt;&#x60;  Abaixo estão listados os tipos de erro do DICT.   **Gerais**  - &#x60;Forbidden&#x60;   - Requisição de participante autenticado que viola alguma regra de autorização.      Ver [rfc7231](https://tools.ietf.org/html/rfc7231#section-6.5.3).  - &#x60;BadRequest&#x60;   -  Requisição com formato inválido.     Ver [rfc7231](https://tools.ietf.org/html/rfc7231#section-6.5.1)  - &#x60;NotFound&#x60;   - Entidade não encontrada.      Ver [rfc7231](https://tools.ietf.org/html/rfc7231#section-6.5.4)  - &#x60;RateLimited&#x60;   - Limite de requisições foi atingido.      Ver seção sobre [limitação de requisições](#section/Seguranca/Limitacao-de-requisicoes)  - &#x60;InternalServerError&#x60;   - Condição inesperada ao processar requisição.     Ver [rfc7231](https://tools.ietf.org/html/rfc7231#section-6.6.1)  - &#x60;ServiceUnavailable&#x60;   - Serviço não está disponível no momento. Serviço solicitado pode estar em manutenção ou fora     da janela de funcionamento.  - &#x60;RequestSignatureInvalid&#x60;   - Assinatura digital da requisição enviada é inválida.  - &#x60;RequestOnBehalfUnauthorized&#x60;   - Participante direto envia requisição em nome de participante indireto para o qual não tem autorização.  - &#x60;RequestIdAlreadyUsed&#x60;   - Requisição foi feita com mesmo &#x60;RequestId&#x60; de requisição feita anteriormente, mas com parâmetros diferentes.  - &#x60;InvalidReason&#x60;   - Requisição foi feita com uma razão inválida para a operação.  **Vínculos**  - &#x60;EntryInvalid&#x60;   - Existem campos inválidos ao tentar criar novo vínculo.  - &#x60;EntryLimitExceeded&#x60;   - Número de vínculos associados a conta transacional excedeu o limite máximo.  - &#x60;EntryAlreadyExists&#x60;   - Já existe vínculo para essa chave com o mesmo participante e dono.  - &#x60;EntryCannotBeQueriedForBookTransfer&#x60;   - Vínculo consultado está custodiado no mesmo PSP do usuário pagador para quem está sendo feita a consulta.     Quando o pagador e o recebedor estão no mesmo PSP, não deve ser feita consulta ao DICT.  - &#x60;EntryKeyOwnedByDifferentPerson&#x60;   - Já existe vínculo para essa chave mas ela é possuída por outra pessoa.     Indica-se que seja feita uma reivindicação de posse.  - &#x60;EntryKeyInCustodyOfDifferentParticipant&#x60;   - Já existe vínculo para essa chave com o mesmo dono, mas ela encontra-se associada     a outro participante. Indica-se que seja feita uma reivindicação de portabilidade.  - &#x60;EntryLockedByClaim&#x60;   - Existe uma reivindicação com status diferente de concluída ou cancelada para a chave      do vínculo. Enquanto estiver nessa situação, o vínculo não pode ser excluído.  **Reivindicações**  - &#x60;ClaimInvalid&#x60;   - Existem campos inválidos ao tentar criar nova reivindicação.  - &#x60;ClaimTypeInconsistent&#x60;   - Tipo de reivindicação pedida é inconsistente. Esse erro ocorre nas situações em que    se tenta criar a) reivindicação de _posse_, mas vínculo existente tem como dona a mesma    pessoa que reivindica ou b) reinvidicação de _portabilidade_, mas vínculo existente tem    como dona pessoa diferente da que reivindica.  - &#x60;ClaimKeyNotFound&#x60;   - Não existe vínculo registrado com a chave que está sendo reivindicada.  - &#x60;ClaimAlreadyExistsForKey&#x60;   - Existe uma reivindicação com status diferente de concluída ou cancelada para a chave reivindicada.     Nova reivindicação para a chave só pode ser criada se a atual foi concluída ou cancelada.  - &#x60;ClaimResultingEntryAlreadyExists&#x60;   - Vínculo que resultaria ao processar reivindicação já existe, com mesma chave, participante e dono.  - &#x60;ClaimOperationInvalid&#x60;   - Status atual da reivindicação não permite que operação seja feita.  - &#x60;ClaimResolutionPeriodNotEnded&#x60;   - Para reivindicação de posse, PSP doador não pode __confirmar__ antes do término do período resolução.     Para portabilidade, PSP doador não pode __cancelar__ por fim de prazo antes do término do período resolução.  - &#x60;ClaimCompletionPeriodNotEnded&#x60;   - Para reivindicação de posse, se PSP reivindicador tenta encerrar antes do término do período encerramento.  **Disputas**  - &#x60;DisputeInvalid&#x60;   - Existem campos inválidos ao tentar criar nova disputa.  - &#x60;DisputeOperationInvalid&#x60;   - Status atual da disputa não permite que operação seja feita.  - &#x60;DisputeTransactionNotFound&#x60;   - A transação disputada não foi encontrada.  - &#x60;DisputeAlreadyBeingProcessedForTransaction&#x60;   - Já existe disputa em andamento para a transação informada.  - &#x60;DisputeAlreadyProcessedForTransaction&#x60;   - Já existe disputa fechada para a transação informada.  - &#x60;DisputePeriodExpired&#x60;   - O prazo de contestação da transação expirou.
    """
)
