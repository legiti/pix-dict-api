# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AllOfCreateSyncVerificationResponseSyncVerification(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, result: str=None):  # noqa: E501
        """AllOfCreateSyncVerificationResponseSyncVerification - a model defined in Swagger

        :param id: The id of this AllOfCreateSyncVerificationResponseSyncVerification.  # noqa: E501
        :type id: int
        :param result: The result of this AllOfCreateSyncVerificationResponseSyncVerification.  # noqa: E501
        :type result: str
        """
        self.swagger_types = {
            'id': int,
            'result': str
        }

        self.attribute_map = {
            'id': 'Id',
            'result': 'Result'
        }
        self._id = id
        self._result = result

    @classmethod
    def from_dict(cls, dikt) -> 'AllOfCreateSyncVerificationResponseSyncVerification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AllOfCreateSyncVerificationResponseSyncVerification of this AllOfCreateSyncVerificationResponseSyncVerification.  # noqa: E501
        :rtype: AllOfCreateSyncVerificationResponseSyncVerification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this AllOfCreateSyncVerificationResponseSyncVerification.


        :return: The id of this AllOfCreateSyncVerificationResponseSyncVerification.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this AllOfCreateSyncVerificationResponseSyncVerification.


        :param id: The id of this AllOfCreateSyncVerificationResponseSyncVerification.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def result(self) -> str:
        """Gets the result of this AllOfCreateSyncVerificationResponseSyncVerification.


        :return: The result of this AllOfCreateSyncVerificationResponseSyncVerification.
        :rtype: str
        """
        return self._result

    @result.setter
    def result(self, result: str):
        """Sets the result of this AllOfCreateSyncVerificationResponseSyncVerification.


        :param result: The result of this AllOfCreateSyncVerificationResponseSyncVerification.
        :type result: str
        """
        allowed_values = ["OK", "NOK"]  # noqa: E501
        if result not in allowed_values:
            raise ValueError(
                "Invalid value for `result` ({0}), must be one of {1}"
                .format(result, allowed_values)
            )

        self._result = result
