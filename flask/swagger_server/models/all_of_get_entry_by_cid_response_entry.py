# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AllOfGetEntryByCidResponseEntry(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, creation_date: datetime=None, key_ownership_date: datetime=None):  # noqa: E501
        """AllOfGetEntryByCidResponseEntry - a model defined in Swagger

        :param creation_date: The creation_date of this AllOfGetEntryByCidResponseEntry.  # noqa: E501
        :type creation_date: datetime
        :param key_ownership_date: The key_ownership_date of this AllOfGetEntryByCidResponseEntry.  # noqa: E501
        :type key_ownership_date: datetime
        """
        self.swagger_types = {
            'creation_date': datetime,
            'key_ownership_date': datetime
        }

        self.attribute_map = {
            'creation_date': 'CreationDate',
            'key_ownership_date': 'KeyOwnershipDate'
        }
        self._creation_date = creation_date
        self._key_ownership_date = key_ownership_date

    @classmethod
    def from_dict(cls, dikt) -> 'AllOfGetEntryByCidResponseEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AllOfGetEntryByCidResponseEntry of this AllOfGetEntryByCidResponseEntry.  # noqa: E501
        :rtype: AllOfGetEntryByCidResponseEntry
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_date(self) -> datetime:
        """Gets the creation_date of this AllOfGetEntryByCidResponseEntry.

        Data de criação do vínculo.  # noqa: E501

        :return: The creation_date of this AllOfGetEntryByCidResponseEntry.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date: datetime):
        """Sets the creation_date of this AllOfGetEntryByCidResponseEntry.

        Data de criação do vínculo.  # noqa: E501

        :param creation_date: The creation_date of this AllOfGetEntryByCidResponseEntry.
        :type creation_date: datetime
        """
        if creation_date is None:
            raise ValueError("Invalid value for `creation_date`, must not be `None`")  # noqa: E501

        self._creation_date = creation_date

    @property
    def key_ownership_date(self) -> datetime:
        """Gets the key_ownership_date of this AllOfGetEntryByCidResponseEntry.

        Data a partir da qual o dono tem posse ininterrupta da chave de endereçamento.  Posse da chave aqui é definida pela existência de um vínculo associando a chave ao dono,  possivelmente com contas distintas.  # noqa: E501

        :return: The key_ownership_date of this AllOfGetEntryByCidResponseEntry.
        :rtype: datetime
        """
        return self._key_ownership_date

    @key_ownership_date.setter
    def key_ownership_date(self, key_ownership_date: datetime):
        """Sets the key_ownership_date of this AllOfGetEntryByCidResponseEntry.

        Data a partir da qual o dono tem posse ininterrupta da chave de endereçamento.  Posse da chave aqui é definida pela existência de um vínculo associando a chave ao dono,  possivelmente com contas distintas.  # noqa: E501

        :param key_ownership_date: The key_ownership_date of this AllOfGetEntryByCidResponseEntry.
        :type key_ownership_date: datetime
        """
        if key_ownership_date is None:
            raise ValueError("Invalid value for `key_ownership_date`, must not be `None`")  # noqa: E501

        self._key_ownership_date = key_ownership_date
