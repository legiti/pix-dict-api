# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.entryproperties_key_type import EntrypropertiesKeyType  # noqa: F401,E501
from swagger_server.models.object import Object  # noqa: F401,E501
from swagger_server import util


class CreateCidSetFileRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, signature: object=None, participant: AllOfCreateCidSetFileRequestParticipant=None, key_type: EntrypropertiesKeyType=None):  # noqa: E501
        """CreateCidSetFileRequest - a model defined in Swagger

        :param signature: The signature of this CreateCidSetFileRequest.  # noqa: E501
        :type signature: object
        :param participant: The participant of this CreateCidSetFileRequest.  # noqa: E501
        :type participant: AllOfCreateCidSetFileRequestParticipant
        :param key_type: The key_type of this CreateCidSetFileRequest.  # noqa: E501
        :type key_type: EntrypropertiesKeyType
        """
        self.swagger_types = {
            'signature': object,
            'participant': AllOfCreateCidSetFileRequestParticipant,
            'key_type': EntrypropertiesKeyType
        }

        self.attribute_map = {
            'signature': 'Signature',
            'participant': 'Participant',
            'key_type': 'KeyType'
        }
        self._signature = signature
        self._participant = participant
        self._key_type = key_type

    @classmethod
    def from_dict(cls, dikt) -> 'CreateCidSetFileRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateCidSetFileRequest of this CreateCidSetFileRequest.  # noqa: E501
        :rtype: CreateCidSetFileRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def signature(self) -> object:
        """Gets the signature of this CreateCidSetFileRequest.


        :return: The signature of this CreateCidSetFileRequest.
        :rtype: object
        """
        return self._signature

    @signature.setter
    def signature(self, signature: object):
        """Sets the signature of this CreateCidSetFileRequest.


        :param signature: The signature of this CreateCidSetFileRequest.
        :type signature: object
        """

        self._signature = signature

    @property
    def participant(self) -> AllOfCreateCidSetFileRequestParticipant:
        """Gets the participant of this CreateCidSetFileRequest.


        :return: The participant of this CreateCidSetFileRequest.
        :rtype: AllOfCreateCidSetFileRequestParticipant
        """
        return self._participant

    @participant.setter
    def participant(self, participant: AllOfCreateCidSetFileRequestParticipant):
        """Sets the participant of this CreateCidSetFileRequest.


        :param participant: The participant of this CreateCidSetFileRequest.
        :type participant: AllOfCreateCidSetFileRequestParticipant
        """
        if participant is None:
            raise ValueError("Invalid value for `participant`, must not be `None`")  # noqa: E501

        self._participant = participant

    @property
    def key_type(self) -> EntrypropertiesKeyType:
        """Gets the key_type of this CreateCidSetFileRequest.


        :return: The key_type of this CreateCidSetFileRequest.
        :rtype: EntrypropertiesKeyType
        """
        return self._key_type

    @key_type.setter
    def key_type(self, key_type: EntrypropertiesKeyType):
        """Sets the key_type of this CreateCidSetFileRequest.


        :param key_type: The key_type of this CreateCidSetFileRequest.
        :type key_type: EntrypropertiesKeyType
        """
        if key_type is None:
            raise ValueError("Invalid value for `key_type`, must not be `None`")  # noqa: E501

        self._key_type = key_type
