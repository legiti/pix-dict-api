# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.create_dispute_responseproperties_dispute import CreateDisputeResponsepropertiesDispute  # noqa: F401,E501
from swagger_server import util


class GetDisputeResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, signature: object=None, dispute: CreateDisputeResponsepropertiesDispute=None):  # noqa: E501
        """GetDisputeResponse - a model defined in Swagger

        :param signature: The signature of this GetDisputeResponse.  # noqa: E501
        :type signature: object
        :param dispute: The dispute of this GetDisputeResponse.  # noqa: E501
        :type dispute: CreateDisputeResponsepropertiesDispute
        """
        self.swagger_types = {
            'signature': object,
            'dispute': CreateDisputeResponsepropertiesDispute
        }

        self.attribute_map = {
            'signature': 'Signature',
            'dispute': 'Dispute'
        }
        self._signature = signature
        self._dispute = dispute

    @classmethod
    def from_dict(cls, dikt) -> 'GetDisputeResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GetDisputeResponse of this GetDisputeResponse.  # noqa: E501
        :rtype: GetDisputeResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def signature(self) -> object:
        """Gets the signature of this GetDisputeResponse.


        :return: The signature of this GetDisputeResponse.
        :rtype: object
        """
        return self._signature

    @signature.setter
    def signature(self, signature: object):
        """Sets the signature of this GetDisputeResponse.


        :param signature: The signature of this GetDisputeResponse.
        :type signature: object
        """

        self._signature = signature

    @property
    def dispute(self) -> CreateDisputeResponsepropertiesDispute:
        """Gets the dispute of this GetDisputeResponse.


        :return: The dispute of this GetDisputeResponse.
        :rtype: CreateDisputeResponsepropertiesDispute
        """
        return self._dispute

    @dispute.setter
    def dispute(self, dispute: CreateDisputeResponsepropertiesDispute):
        """Sets the dispute of this GetDisputeResponse.


        :param dispute: The dispute of this GetDisputeResponse.
        :type dispute: CreateDisputeResponsepropertiesDispute
        """

        self._dispute = dispute
