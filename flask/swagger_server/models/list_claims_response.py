# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.create_claim_responseproperties_claim import CreateClaimResponsepropertiesClaim  # noqa: F401,E501
from swagger_server import util


class ListClaimsResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, signature: object=None, has_more_elements: bool=None, claims: List[CreateClaimResponsepropertiesClaim]=None):  # noqa: E501
        """ListClaimsResponse - a model defined in Swagger

        :param signature: The signature of this ListClaimsResponse.  # noqa: E501
        :type signature: object
        :param has_more_elements: The has_more_elements of this ListClaimsResponse.  # noqa: E501
        :type has_more_elements: bool
        :param claims: The claims of this ListClaimsResponse.  # noqa: E501
        :type claims: List[CreateClaimResponsepropertiesClaim]
        """
        self.swagger_types = {
            'signature': object,
            'has_more_elements': bool,
            'claims': List[CreateClaimResponsepropertiesClaim]
        }

        self.attribute_map = {
            'signature': 'Signature',
            'has_more_elements': 'HasMoreElements',
            'claims': 'Claims'
        }
        self._signature = signature
        self._has_more_elements = has_more_elements
        self._claims = claims

    @classmethod
    def from_dict(cls, dikt) -> 'ListClaimsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ListClaimsResponse of this ListClaimsResponse.  # noqa: E501
        :rtype: ListClaimsResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def signature(self) -> object:
        """Gets the signature of this ListClaimsResponse.


        :return: The signature of this ListClaimsResponse.
        :rtype: object
        """
        return self._signature

    @signature.setter
    def signature(self, signature: object):
        """Sets the signature of this ListClaimsResponse.


        :param signature: The signature of this ListClaimsResponse.
        :type signature: object
        """

        self._signature = signature

    @property
    def has_more_elements(self) -> bool:
        """Gets the has_more_elements of this ListClaimsResponse.

        Existem mais elementos para iterar  # noqa: E501

        :return: The has_more_elements of this ListClaimsResponse.
        :rtype: bool
        """
        return self._has_more_elements

    @has_more_elements.setter
    def has_more_elements(self, has_more_elements: bool):
        """Sets the has_more_elements of this ListClaimsResponse.

        Existem mais elementos para iterar  # noqa: E501

        :param has_more_elements: The has_more_elements of this ListClaimsResponse.
        :type has_more_elements: bool
        """

        self._has_more_elements = has_more_elements

    @property
    def claims(self) -> List[CreateClaimResponsepropertiesClaim]:
        """Gets the claims of this ListClaimsResponse.


        :return: The claims of this ListClaimsResponse.
        :rtype: List[CreateClaimResponsepropertiesClaim]
        """
        return self._claims

    @claims.setter
    def claims(self, claims: List[CreateClaimResponsepropertiesClaim]):
        """Sets the claims of this ListClaimsResponse.


        :param claims: The claims of this ListClaimsResponse.
        :type claims: List[CreateClaimResponsepropertiesClaim]
        """

        self._claims = claims
