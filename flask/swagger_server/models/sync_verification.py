# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.entryproperties_key_type import EntrypropertiesKeyType  # noqa: F401,E501
from swagger_server.models.object import Object  # noqa: F401,E501
from swagger_server import util


class SyncVerification(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, participant: AllOfSyncVerificationParticipant=None, key_type: EntrypropertiesKeyType=None, participant_sync_verifier: AllOfSyncVerificationParticipantSyncVerifier=None):  # noqa: E501
        """SyncVerification - a model defined in Swagger

        :param participant: The participant of this SyncVerification.  # noqa: E501
        :type participant: AllOfSyncVerificationParticipant
        :param key_type: The key_type of this SyncVerification.  # noqa: E501
        :type key_type: EntrypropertiesKeyType
        :param participant_sync_verifier: The participant_sync_verifier of this SyncVerification.  # noqa: E501
        :type participant_sync_verifier: AllOfSyncVerificationParticipantSyncVerifier
        """
        self.swagger_types = {
            'participant': AllOfSyncVerificationParticipant,
            'key_type': EntrypropertiesKeyType,
            'participant_sync_verifier': AllOfSyncVerificationParticipantSyncVerifier
        }

        self.attribute_map = {
            'participant': 'Participant',
            'key_type': 'KeyType',
            'participant_sync_verifier': 'ParticipantSyncVerifier'
        }
        self._participant = participant
        self._key_type = key_type
        self._participant_sync_verifier = participant_sync_verifier

    @classmethod
    def from_dict(cls, dikt) -> 'SyncVerification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SyncVerification of this SyncVerification.  # noqa: E501
        :rtype: SyncVerification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def participant(self) -> AllOfSyncVerificationParticipant:
        """Gets the participant of this SyncVerification.


        :return: The participant of this SyncVerification.
        :rtype: AllOfSyncVerificationParticipant
        """
        return self._participant

    @participant.setter
    def participant(self, participant: AllOfSyncVerificationParticipant):
        """Sets the participant of this SyncVerification.


        :param participant: The participant of this SyncVerification.
        :type participant: AllOfSyncVerificationParticipant
        """
        if participant is None:
            raise ValueError("Invalid value for `participant`, must not be `None`")  # noqa: E501

        self._participant = participant

    @property
    def key_type(self) -> EntrypropertiesKeyType:
        """Gets the key_type of this SyncVerification.


        :return: The key_type of this SyncVerification.
        :rtype: EntrypropertiesKeyType
        """
        return self._key_type

    @key_type.setter
    def key_type(self, key_type: EntrypropertiesKeyType):
        """Sets the key_type of this SyncVerification.


        :param key_type: The key_type of this SyncVerification.
        :type key_type: EntrypropertiesKeyType
        """
        if key_type is None:
            raise ValueError("Invalid value for `key_type`, must not be `None`")  # noqa: E501

        self._key_type = key_type

    @property
    def participant_sync_verifier(self) -> AllOfSyncVerificationParticipantSyncVerifier:
        """Gets the participant_sync_verifier of this SyncVerification.


        :return: The participant_sync_verifier of this SyncVerification.
        :rtype: AllOfSyncVerificationParticipantSyncVerifier
        """
        return self._participant_sync_verifier

    @participant_sync_verifier.setter
    def participant_sync_verifier(self, participant_sync_verifier: AllOfSyncVerificationParticipantSyncVerifier):
        """Sets the participant_sync_verifier of this SyncVerification.


        :param participant_sync_verifier: The participant_sync_verifier of this SyncVerification.
        :type participant_sync_verifier: AllOfSyncVerificationParticipantSyncVerifier
        """

        self._participant_sync_verifier = participant_sync_verifier
