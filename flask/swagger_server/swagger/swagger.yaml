openapi: 3.0.0
info:
  title: DICT API
  description: "O Diretório de Identificadores de Contas Transacionais - DICT - é\
    \ o serviço do arranjo PIX que permite \nbuscar detalhes de contas transacionais\
    \  com chaves de endereçamento mais convenientes para quem faz \num pagamento.\
    \ Entre os tipos de chave atualmente disponíveis estão CPF, CNPJ, telefone, e-mail\
    \ e EVP.\nAs informações retornadas pelo DICT permitem ao pagador confirmar a\
    \ identidade do recebedor, proporcionando \numa experiência mais fácil e segura.\
    \ Permitem também ao PSP do pagador criar a mensagem de instrução de \npagamento\
    \ a ser enviada para o sistema de liquidação com os detalhes de conta do recebedor.\n\
    \n# Segurança\n## Autenticação \nO DICT utiliza autenticação mútua TLS.\n\nAs\
    \ definições de autenticação para essa API estão especificados no \n[manual de\
    \ segurança PIX](https://www.bcb.gov.br/content/estabilidadefinanceira/forumpireunioes/Anexo%20IV%20-%20Manual%20de%20Seguranca%20PIX%20v2.0.pdf)\n\
    \n## Assinatura digital\nRequisições que incluam ou alterem informações no DICT\
    \ devem ser assinadas com \n[XML Digital Signature](https://www.w3.org/2000/09/xmldsig)\
    \ pelo participante que envia a requisição.\nRequisições de consulta não precisam\
    \ ser assinadas. Respostas retornadas pelo DICT serão assinadas digitalmente.\
    \ \nAs assinaturas **devem** ser validadas pelos clientes da API. \n\nA assinatura\
    \ será colocada no elemento `Signature` das requisições e respostas. \nO `Signature`\
    \ será [envelopado](https://www.w3.org/TR/xmldsig-core1/#def-SignatureEnveloped)\
    \ pelo XML que está \nsendo assinado (assinatura é um elemento filho).\n\nPara\
    \ mais detalhes sobre a forma de construir a assinatura, consulte o\n[manual de\
    \ segurança PIX](https://www.bcb.gov.br/content/estabilidadefinanceira/forumpireunioes/Anexo%20IV%20-%20Manual%20de%20Seguranca%20PIX%20v2.0.pdf).\n\
    \n## Limitação de requisições\n\nPara previnir ataques de enumeração, há mecanismo\
    \ de limitação da quantidade de consultas que podem ser feitas \nnum espaço de\
    \ tempo (_rate-limiting_). \nA limitação atua em dois níveis, para usuários individuais\
    \ e para um participante como um todo.\n\nPara cada um desses níveis, há limite\
    \ para o número de consultas que não resultam em pagamento.\n\nQuando algum desses\
    \ limites for atingido, o serviço retornará status `429`, especificando a causa.\n\
    Cabeçalhos indicando os parâmetros de _rate-limiting_ serão retornados nas requisiç\
    ões. Ver, por exemplo,\nos cabeçalhos retornados ao [consultar vínculo](#operation/getEntry).\n\
    \n# Evolução da API\n\nAs seguintes mudanças são esperadas e consideradas retro-compatí\
    veis (_backwards-compatibility_):\n\n- Adição de novos recursos na API.\n- Adiç\
    ão de novos parâmetros opcionais a requisições.\n- Adição de novos campos em respostas\
    \ da API.\n- Alteração da ordem de campos.\n- Adição de novos elementos em enumeraç\
    ões\n\nMudanças compatíveis não geram nova versão da API. \nClientes devem estar\
    \ preparados para lidar com essas mudanças sem quebrar.\n\nMudanças incompatí\
    veis geram nova versão da API.\n\n# Tratamento de erros\n\nO DICT retorna códigos\
    \ de status HTTP para indicar sucesso ou falhas das requisições. \nCódigos 2xx\
    \ indicam sucesso. Códigos 4xx indicam falhas causadas pelas informações \nenviadas\
    \ pelo cliente ou pelo estado atual das entidades. Códigos 5xx indicam problemas\
    \ \nno serviço no lado do DICT.\n\nAs respostas de erro incluem no corpo detalhes\
    \ do erro seguindo o schema da RFC \n[Problem Details for HTTP APIs](https://tools.ietf.org/html/rfc7807).\
    \    \nO campo `type` identifica o tipo de erro e no DICT segue o padrão: \n`https://dict.pi.rsfn.net.br/api/v1/error/<TipoErro>`\n\
    \nAbaixo estão listados os tipos de erro do DICT.\n\n\n**Gerais**\n\n- `Forbidden`\n\
    \  - Requisição de participante autenticado que viola alguma regra de autorizaç\
    ão. \n    Ver [rfc7231](https://tools.ietf.org/html/rfc7231#section-6.5.3).\n\n\
    - `BadRequest`\n  -  Requisição com formato inválido.\n    Ver [rfc7231](https://tools.ietf.org/html/rfc7231#section-6.5.1)\n\
    \n- `NotFound`\n  - Entidade não encontrada. \n    Ver [rfc7231](https://tools.ietf.org/html/rfc7231#section-6.5.4)\n\
    \n- `RateLimited`\n  - Limite de requisições foi atingido. \n    Ver seção sobre\
    \ [limitação de requisições](#section/Seguranca/Limitacao-de-requisicoes)\n\n\
    - `InternalServerError`\n  - Condição inesperada ao processar requisição.\n  \
    \  Ver [rfc7231](https://tools.ietf.org/html/rfc7231#section-6.6.1)\n\n- `ServiceUnavailable`\n\
    \  - Serviço não está disponível no momento. Serviço solicitado pode estar em\
    \ manutenção ou fora\n    da janela de funcionamento.\n\n- `RequestSignatureInvalid`\n\
    \  - Assinatura digital da requisição enviada é inválida.\n\n- `RequestOnBehalfUnauthorized`\n\
    \  - Participante direto envia requisição em nome de participante indireto para\
    \ o qual não tem autorização.\n\n- `RequestIdAlreadyUsed`\n  - Requisição foi\
    \ feita com mesmo `RequestId` de requisição feita anteriormente, mas com parâ\
    metros diferentes.\n\n- `InvalidReason`\n  - Requisição foi feita com uma razã\
    o inválida para a operação.\n\n**Vínculos**\n\n- `EntryInvalid`\n  - Existem campos\
    \ inválidos ao tentar criar novo vínculo.\n\n- `EntryLimitExceeded`\n  - Número\
    \ de vínculos associados a conta transacional excedeu o limite máximo.\n\n- `EntryAlreadyExists`\n\
    \  - Já existe vínculo para essa chave com o mesmo participante e dono.\n\n- `EntryCannotBeQueriedForBookTransfer`\n\
    \  - Vínculo consultado está custodiado no mesmo PSP do usuário pagador para quem\
    \ está sendo feita a consulta.\n    Quando o pagador e o recebedor estão no mesmo\
    \ PSP, não deve ser feita consulta ao DICT.\n\n- `EntryKeyOwnedByDifferentPerson`\n\
    \  - Já existe vínculo para essa chave mas ela é possuída por outra pessoa.\n\
    \    Indica-se que seja feita uma reivindicação de posse.\n\n- `EntryKeyInCustodyOfDifferentParticipant`\n\
    \  - Já existe vínculo para essa chave com o mesmo dono, mas ela encontra-se associada\n\
    \    a outro participante. Indica-se que seja feita uma reivindicação de portabilidade.\n\
    \n- `EntryLockedByClaim`\n  - Existe uma reivindicação com status diferente de\
    \ concluída ou cancelada para a chave \n    do vínculo. Enquanto estiver nessa\
    \ situação, o vínculo não pode ser excluído.\n\n**Reivindicações**\n\n- `ClaimInvalid`\n\
    \  - Existem campos inválidos ao tentar criar nova reivindicação.\n\n- `ClaimTypeInconsistent`\n\
    \  - Tipo de reivindicação pedida é inconsistente. Esse erro ocorre nas situaç\
    ões em que \n  se tenta criar a) reivindicação de _posse_, mas vínculo existente\
    \ tem como dona a mesma \n  pessoa que reivindica ou b) reinvidicação de _portabilidade_,\
    \ mas vínculo existente tem \n  como dona pessoa diferente da que reivindica.\n\
    \n- `ClaimKeyNotFound`\n  - Não existe vínculo registrado com a chave que está\
    \ sendo reivindicada.\n\n- `ClaimAlreadyExistsForKey`\n  - Existe uma reivindicaç\
    ão com status diferente de concluída ou cancelada para a chave reivindicada.\n\
    \    Nova reivindicação para a chave só pode ser criada se a atual foi concluí\
    da ou cancelada.\n\n- `ClaimResultingEntryAlreadyExists`\n  - Vínculo que resultaria\
    \ ao processar reivindicação já existe, com mesma chave, participante e dono.\n\
    \n- `ClaimOperationInvalid`\n  - Status atual da reivindicação não permite que\
    \ operação seja feita.\n\n- `ClaimResolutionPeriodNotEnded`\n  - Para reivindicaç\
    ão de posse, PSP doador não pode __confirmar__ antes do término do período resoluç\
    ão.\n    Para portabilidade, PSP doador não pode __cancelar__ por fim de prazo\
    \ antes do término do período resolução.\n\n- `ClaimCompletionPeriodNotEnded`\n\
    \  - Para reivindicação de posse, se PSP reivindicador tenta encerrar antes do\
    \ término do período encerramento.\n\n**Disputas**\n\n- `DisputeInvalid`\n  -\
    \ Existem campos inválidos ao tentar criar nova disputa.\n\n- `DisputeOperationInvalid`\n\
    \  - Status atual da disputa não permite que operação seja feita.\n\n- `DisputeTransactionNotFound`\n\
    \  - A transação disputada não foi encontrada.\n\n- `DisputeAlreadyBeingProcessedForTransaction`\n\
    \  - Já existe disputa em andamento para a transação informada.\n\n- `DisputeAlreadyProcessedForTransaction`\n\
    \  - Já existe disputa fechada para a transação informada.\n\n- `DisputePeriodExpired`\n\
    \  - O prazo de contestação da transação expirou."
  contact:
    name: Suporte TI BCB
    url: https://www.bcb.gov.br/estabilidadefinanceira/pagamentosinstantaneos
    email: suporte.ti@bcb.gov.br
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: 1.0.0-RC5
servers:
- url: https://dict-h.pi.rsfn.net.br/api/v1-rc5/
  description: Servidor de Homologação
tags:
- name: Directory
  description: "O diretório de identificadores de contas transacionais é um conjunto\
    \ de vínculos.\nUm vínculo é uma associação entre uma chave de endereçamento,\
    \ uma conta transacional e seu dono.\nO dono pode ser uma pessoa física ou uma\
    \ pessoa jurídica. A chave de endereçamento é usada identificar um vínculo.\n\n\
    Os tipos de chave suportadas atualmente são as seguintes:\n\n|  Tipo         |\
    \ Exp. regular                                                               \
    \                                | Exemplo                              | Comentá\
    rio                                                                |\n|---------------|------------------------------------------------------------------------------------------------------------|--------------------------------------|---------------------------------------------------------------------------|\n\
    | CPF           |  ^\\[0-9\\]{11}$                                           \
    \                                                  | 12345678901             \
    \             |                                                              \
    \             |\n| CNPJ          |  ^\\[0-9\\]{14}$                          \
    \                                                                   | 12345678901234\
    \                       |                                                    \
    \                       |\n| PHONE         |  ^\\\\+\\[1-9\\]\\[0-9\\]\\d{1,14}$\
    \                                                                            \
    \   | +5510998765432                       |                                 \
    \                                          |\n| EMAIL         |  [e-mails válidos\
    \ W3C HTML5](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address)\
    \       | pix@bcb.gov.br                       | E-mail deve possuir no máximo\
    \ 77 caracteres e deve ser em minúsculo       | \n| EVP           |  [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\
    \                                              | 123e4567-e89b-12d3-a456-426655440000\
    \ | Endereço Virtual de Pagamento é um tipo de chave é gerado pelo DICT      \
    \ |\n\n\nNovos tipos de chave poderão vir a ser adicionados no futuro. Logo, é\
    \ importante que a implementação de clientes\nseja flexível, permitindo a adiç\
    ão de novos tipos de chave."
  x-displayName: Diretório
- name: Claim
  description: "Conforme as chaves mudem de dono ou os usuários finais criem contas\
    \ transacionais em outros PSPs, \nos seguintes cenários precisarão ser tratados:\n\
    \n1. Houve troca de posse de uma chave (telefone ou email) e o novo dono deseja\
    \ \ncriar um vínculo para uma conta sua mas o dono anterior já possui vínculo\
    \ registrado \nno DICT com essa chave.\n2. Um usuário deseja mudar a vinculaçã\
    o de uma chave sua para outra conta, que \nestá domiciliada em um participante\
    \ diferente do atual.\n\nPara o cenário 1, deve ser criada uma _reivindicação\
    \ de posse_. Já para o cenário 2,\numa _portabilidade_. Em ambos cenários existirá\
    \ a figura do PSP que irá ceder a chave (PSP Doador),\ne o PSP que irá receber\
    \ a chave (PSP Reivindicador). No cenário de _reivindicação de posse_, o PSP \n\
    doador e o reivindicador podem ser o mesmo.\n\nNessa especificação, _reivindicaç\
    ão_ sem qualificador é usado como termo mais genérico para se referir \ntanto\
    \ à reivindicação de posse quanto à (reivindicação de) portabilidade.\n\nOs processos\
    \ de reivindicação são sempre iniciados pelo PSP reivindicador.\nUma reivindicaç\
    ão tem as seguintes situações:\n  - `OPEN` - Aberta pelo reivindicador, mas ainda\
    \ não recebida pelo doador.\n  - `WAITING_RESOLUTION` - Já foi recebida pelo doador\
    \ e está aguardando a resolução. Os critérios confirmação\n  ou cancelamento da\
    \ reivindicação seguem normas específicas a depender do tipo (posse ou portabilidade).\n\
    \  - `CONFIRMED` - O doador confirmou a reivindicação. Isso implica a remoção\
    \ da chave do DICT e da base interna \n  do PSP doador. Está aguardando o reivindicador\
    \ encerrar o processo.\n  - `CANCELLED` - O doador ou reivindicador cancelou a\
    \ reivindicação, mantendo o vínculo inalterado (conforme estava antes da \n  reivindicaç\
    ão) tanto no DICT quanto na base interna do PSP.\n  - `COMPLETED` - Tanto o DICT\
    \ quanto o reivindicador atualizaram suas bases com o novo vínculo.\n\n**Diagrama\
    \ de estados**\n\n```\n( OPEN )------->( WAITING_RESOLUTION )------->( CONFIRMED\
    \ )------->( COMPLETED )\n                          |                        /\
    \                            \n                          |                   \
    \    /                             \n                          |             \
    \         /                              \n                          |       \
    \              /--Apenas para                  \n                          v \
    \                   /   reivindicação                \n                    ( CANCELLED\
    \ )<------------v    de posse                      \n```\n\n**Importante!** \n\
    Os participantes deverão monitorar as reivindicações fazendo _polling_ períodico\
    \ no _endpoint_\nde [listar reivindicações](#operation/listClaims). A periodicidade\
    \ adequada dependerá \ndas definições de nível de serviço."
  x-displayName: Reivindicação
- name: Reconciliation
  description: "A reconciliação permite que o participante identifique inconsistê\
    ncias nos vínculos da sua base de dados interna \ne o DICT. É possível fazer a\
    \ verificação de forma agregada, sobre todo o conjunto de vínculos, e a verificaç\
    ão de um \nvínculo individual.\n\nPara permitir que a reconciliação seja feita\
    \ de forma eficiente e segura, toda operação realizada em cima de um vínculo\n\
    gera um identificador de conteúdo, ou CID (_content identifier_). O CID é um nú\
    mero de 256 bits que identifica de forma \núnica o vínculo e todos os seus atributos\
    \ essenciais (ver seção sobre cálculo do CID). Modifições dos dados essenciais\
    \ \ndo vínculo implicam na modificação do CID associado a ele.\n\nA verificaçã\
    o agregada dos vínculos é feita com base no _verificador de sincronismo_ (VSync).\
    \ O participante pode \naferir a igualdade do conjunto de vínculos em seu domí\
    nio gerando o VSync (ver seção sobre cálculo do VSync) da sua base \ne criando\
    \ uma [verificação de sincronismo](#operation/createSyncVerification). A igualdade\
    \ dos VSyncs do DICT e do \nPSP implica, com altíssima probabilidade, que o conjunto\
    \ de CIDs é igual. Caso os VSyncs sejam diferentes, o conjunto \nde CIDs é necessariamente\
    \ diferente, o que significa que há divergências no conjunto de dados de vínculos\
    \ naquele momento.\n\nAo identificar divergências, PSP poderá [consultar pelo\
    \ CID](#operation/getEntryByCid), [alterar](#operation/updateEntry),\n[remover](#operation/deleteEntry)\
    \ ou [criar](#operation/createEntry) vínculos colocando no campo `Reason` das\
    \ requisições\no valor `RECONCILIATION`.\n\nAs operações feitas no conjunto de\
    \ vínculos sob domínio do PSP podem ser acompanhadas de forma contínua no \n[log\
    \ de eventos de CIDs](#operation/listCidSetEvents).\n\nPara obter uma lista completa\
    \ dos CIDs no DICT relativos a um tipo de chave, um PSP poderá solicitar a \n\
    [criação de um arquivo de CIDs](#operation/createCidSetFile).\n\n## Cálculo de\
    \ CID\n\nO CID é calculado da seguinte forma:\n\n```\nentryAttributes = keyType\
    \ \"&\" key \"&\" ownerTaxIdNumber \"&\" ownerName \"&\" ownerTradeName \"&\"\
    \ participant \"&\" branch \"&\" accountNumber \"&\" accountType\ncidBytes = hmacSha256(requestIdBytes,\
    \ entryAttributes)\ncid = lowercase-hexadecimal(cidBytes)\n```\nObservações:\n\
    \n- `entryAttributes` é uma string construída pela junção dos atributos essenciais\
    \ do vínculo, separados por `&`. \n  Todos atributos são strings codificadas em\
    \ UTF-8. Atributos nulos são codificados com string em branco, \"\".\n- `hmacSha256`\
    \ é a função HMAC baseada na função de hash SHA-256.\n- `requestIdBytes` são 16\
    \ bytes aleatórios, gerados para identificar a requisição que cria o vínculo,\
    \ usado como chave na função hmacSha256.\n- `cid` é a representação hexadecimal,\
    \ em lowercase, do resultado da função hmacSha256.\n\nExemplo:\n\n```\nentryAttributes\
    \ = 'PHONE&+5511987654321&11122233300&João Silva&&12345678&00001&0007654321&CACC'\n\
    requestIdBytes = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]\ncid\
    \ = '28c06eb41c4dc9c3ae114831efcac7446c8747777fca8b145ecd31ff8480ae88'\n```\n\n\
    \n## Cálculo do VSync\n\n\nO VSync é resultado da aplicação de bitwise-XOR ('OU'\
    \ exclusivo bit-a-bit) sobre todos os CIDs de um determinado \ntipo de chave.\n\
    \nExemplo: \n\n```\ncids = ['28c06eb41c4dc9c3ae114831efcac7446c8747777fca8b145ecd31ff8480ae88',\
    \ \n        '4d4abb9168114e349672b934d16ed201a919cb49e28b7f66a240e62c92ee007f',\
    \ \n        'fce514f84f37934bc8aa0f861e4f7392273d71b9d18e8209d21e4192a7842058']\n\
    \nvsync = xor(xor(cids[0], cids[1]), cids[2])  = '996fc1dd3b6b14bcf0c9fe8320eb66d7e2a3fd874ccf767b2e939641b1ea8eaf'\
    \      \n````\n\nObservações:\n- VSync para um conjunto vazio de CIDs é definido\
    \ como '0000000000000000000000000000000000000000000000000000000000000000'.\n-\
    \ Há três CIDs no exemplo acima, representados em hexadecimal. A operação bitwise-XOR\
    \ é feita com os CIDs em formato binário.\n- bitwise-XOR é comutativo, não importa\
    \ a ordem da sua aplicação.\n- Para calcular o novo VSync resultante da adiçã\
    o de um CID ao conjunto, basta calcular o XOR desse CID com o VSync atual.\n \
    \ O novo VSync resultante da remoção de um CID é calculado da mesma forma."
  x-displayName: Reconciliação
- name: Dispute
  description: "As disputas acontecem quando um pagador contesta uma transação realizada\
    \ por fraude (FRAUD),\nerro (ERROR), PLD/FT - Prevenção de Lavagem de Dinheiro\
    \ e Financiamento de Terrorismo (AML_CFT), \nou a pedido do cliente (USER_REQUESTED).\
    \ Assim, o participante recebedor tem a possibilidade \nde avaliar a procedência\
    \ da disputa, e prover (ou não) a devolução dos recursos.\n\nOs estados de uma\
    \ disputa são:\n  - `OPEN` – Criada pelo participante pagador.\n  - `ACKNOWLEDGED`\
    \ – Recebida pelo participante recebedor.\n  - `CLOSED` - Encerrada pelo participante\
    \ recebedor, podendo ter sido aceita ou rejeitada.\n  -\t`CANCELLED` – Cancelada\
    \ pelo participante pagador.\n\nDisputas são criadas a partir do identificador\
    \ da transação realizada no SPI (EndToEndId).\nO prazo máximo para disputar uma\
    \ transação está no regulamento do DICT.\n\nCada participante deve realizar _polling_\
    \ periódico na lista de disputas para verificar se \nexistem novas disputas em\
    \ que é recebedor. O recebimento da disputa não implica o seu aceite.\nO tempo\
    \ máximo de análise também está descrito no regulamento. \n\nAs disputas por motivo\
    \ de fraude e PLD/FT são contabilizadas e retornadas ao [consultar vínculo](#operation/getEntry)."
  x-displayName: Disputas
paths:
  /entries/:
    post:
      tags:
      - Directory
      summary: Criar Vínculo
      description: "Cria um novo vínculo de chave com conta transacional.\n\n### Idempotê\
        ncia\nA operação de criação de vínculo é idempotente. Isso significa que é\
        \ seguro realizar uma nova tentativa em caso de falhas \ntemporárias, como\
        \ erros de conexão ou término abrupto de processos. A resposta retornada para\
        \ uma requisição repetida é \nequivalente à resposta dada à primeira requisiç\
        ão processada.\n\nPara garantir a idempotência da operação, a requisição tem\
        \ um campo `RequestId`. Esse campo é um \n[UUID versão 4](https://tools.ietf.org/html/rfc4122#section-4.4)\
        \ e deve ser único no contexto de um mesmo participante. \nO `RequestId` fica\
        \ associado ao vínculo criado e é usado no cálculo do seu CID (ver seção de\
        \ reconciliação).\n\nUma requisição de criação é considerada repetida quando\
        \ o CID do vínculo contido na requisição já existe no DICT.\nCaso seja feita\
        \ uma requisição com um `RequestId` previamente usado, mas com parâmetros\
        \ diferentes para o vínculo,\nserá retornado o erro `RequestIdAlreadyUsed`."
      operationId: create_entry
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateEntryRequest'
            examples:
              phone:
                value: <?xml version="1.0" encoding="UTF-8" ?> <CreateEntryRequest>
                  <Signature></Signature> <Entry> <Key>+5561988880000</Key> <KeyType>PHONE</KeyType>
                  <Account> <Participant>12345678</Participant> <Branch>0001</Branch>
                  <AccountNumber>0007654321</AccountNumber> <AccountType>CACC</AccountType>
                  <OpeningDate>2010-01-10T03:00:00Z</OpeningDate> </Account> <Owner>
                  <Type>NATURAL_PERSON</Type> <TaxIdNumber>11122233300</TaxIdNumber>
                  <Name>João Silva</Name> </Owner> </Entry> <Reason>USER_REQUESTED</Reason>
                  <RequestId>a946d533-7f22-42a5-9a9b-e87cd55c0f4d</RequestId> </CreateEntryRequest>
      responses:
        "201":
          description: Created
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateEntryResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <CreateEntryResponse>
                    <Signature></Signature> <Entry> <Key>11122233300</Key> <KeyType>CPF</KeyType>
                    <Account> <Participant>12345678</Participant> <Branch>0001</Branch>
                    <AccountNumber>0007654321</AccountNumber> <AccountType>CACC</AccountType>
                    <OpeningDate>2010-01-10T03:00:00Z</OpeningDate> </Account> <Owner>
                    <Type>NATURAL_PERSON</Type> <TaxIdNumber>11122233300</TaxIdNumber>
                    <Name>João Silva</Name> </Owner> <CreationDate>2019-11-18T03:00:00Z</CreationDate>
                    <KeyOwnershipDate>2019-11-18T03:00:00Z</KeyOwnershipDate> </Entry>
                    </CreateEntryResponse>
        "400":
          description: Entry Invalid
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"\
                    ?>\n<problem xmlns=\"urn:ietf:rfc:7807\">\n    <type>https://dict.pi.rsfn.net.br/api/v1/error/EntryInvalid</type>\n\
                    \    <title>Entry is invalid</title>\n    <status>400</status>\n\
                    \    <detail>Entry has invalid fields</detail>\n    <violations>\n\
                    \        <violation>\n            <reason>Value does not match\
                    \ regex '^\\+[1-9]\\d{1,14}$'</reason>\n            <value>61988887777</value>\n\
                    \            <property>entry.key</property>\n        </violation>\n\
                    \    </violations>                    \n</problem>"
        "403":
          description: Forbidden
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>
                      <title>Forbidden</title>
                      <status>403</status>
                      <detail>Participant is not allowed to access this resource</detail>
                    </problem>
        "503":
          description: Service Unavailable
          headers:
            Retry-After:
              description: Tempo de espera em segundos sugerido para nova requisição.
                Ver [rfc7231#section-7.1.3](https://tools.ietf.org/html/rfc7231#section-7.1.3)
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/ServiceUnavailable</type>
                      <title>Service Unavailable</title>
                      <status>503</status>
                      <detail>Service is under scheduled maintenance</detail>
                    </problem>
      x-openapi-router-controller: swagger_server.controllers.directory_controller
  /entries/{Key}:
    get:
      tags:
      - Directory
      summary: Consultar Vínculo
      description: "Obtém um vínculo contendo os detalhes de conta transacional associados\
        \ a uma chave de endereçamento.\n\n### Dados anti-fraude\nA fim de permitir\
        \ avaliação de risco de fraude, na consulta de vínculos são fornecidos contadores\n\
        dos seguintes eventos:\n\n1. transações realizadas\n2. disputas de fraude\
        \ e pld/ft abertas\n3. disputas de fraude e pld/ft procedentes\n\nOs eventos\
        \ são agregados por chave, titular (cpf ou cnpj) e conta transacional em 3\
        \ janelas temporais:\n\n- últimos 3 dias (d3)\n- últimos 30 dias (d30) \n\
        - últimos 6 meses, sem contar o mês corrente (m6)\n\nEsses contadores tem\
        \ ciclo de vida independente do vínculo. Eles não são zerados, mesmo que haja\
        \ \ndesativação da chave ou da conta. Se houver troca de titularidade, ou\
        \ portabilidade, os dados \nsão herdados pelo novo registro no que couber\
        \ (titular, chave, ou conta).\n\nOs contadores de transações realizadas sã\
        o quantizados. A escala usada é 0, 1, 5, 10, 50, 100, 500, 1000, 5000 ...\n\
        Arrendonda-se o número para cima, por exemplo: 3 → 5, 190 → 500 .\n\n### Limitaç\
        ão de requisições\nA política de limitação (_rate-limiting_) funciona com\
        \ base em cabeçalhos enviados na requisição.\n\nO parâmetro `PI-PayerId` é\
        \ o identificador pseudonimizado do usuário final, vinculado a um participante.\
        \ \nRequisições vindas de um mesmo usuário, para um mesmo participante, devem\
        \ usar o mesmo identificador. \nComo sugestão de implementação, pode ser utilizado\
        \ o valor hexadecimal da aplicação de \n[HMAC-SHA-256](https://tools.ietf.org/html/rfc4634#section-7)\
        \ a um identificador do usuário, \ncom chave de conhecimento restrito ao participante.\n\
        \n### Cache\nConsultas a vínculos podem ter suas respostas _cacheadas_ no\
        \ PSP, devendo seguir as \ndiretivas contidas no header [`Cache-Control`](https://tools.ietf.org/html/rfc7234#section-5.2).\n\
        \n_Importante_: Para fazer uso de cache, clientes HTTP geralmente precisam\
        \ ser configurados. Não\né comum que tenham essa funcionalidade habilitada\
        \ por padrão."
      operationId: get_entry
      parameters:
      - name: Key
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Key'
      - name: PI_RequestingParticipant
        in: header
        description: Identificador SPB do participante (direto ou indireto) que faz
          a requisição.
        required: true
        style: simple
        explode: false
        schema:
          pattern: ^[0-9]{8}$
          type: string
          example: "12345678"
      - name: PI_PayerId
        in: header
        description: Identificador pseudonimizado do pagador que originou a requisição.
          Usado para _rate-limiting_.
        required: true
        style: simple
        explode: false
        schema:
          pattern: '[0-9a-f]{64}'
          type: string
      - name: PI_EndToEndId
        in: header
        description: Identificador fim-a-fim do pagamento associado a essa requisição.
          Corresponde ao campo `EndToEndId` na mensagem pacs.008. Usado para _rate-limiting_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          headers:
            PI-RateLimit-ClientRemaining:
              description: Número de requisições disponíveis para que limite associado
                ao `PI-PayerId` seja atingido.
              style: simple
              explode: false
              schema:
                type: integer
              example: 100
            PI-RateLimit-ClientReset:
              description: Segundos até que limite associado ao `PI-PayerId` seja
                renovado.
              style: simple
              explode: false
              schema:
                type: integer
              example: 30
            PI-RateLimit-ParticipantRemaining:
              description: Número de requisições disponíveis para que limite associado
                ao `PI-PayerAccountServicer` seja atingido.
              style: simple
              explode: false
              schema:
                type: integer
              example: 100
            PI-RateLimit-ParticipantReset:
              description: Segundos até que limite associado ao `PI-PayerAccountServicer`
                seja renovado.
              style: simple
              explode: false
              schema:
                type: integer
              example: 30
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/GetEntryResponse'
              examples:
                natural-person:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <GetEntryResponse>
                    <Signature></Signature> <Entry> <Key>11122233300</Key> <KeyType>CPF</KeyType>
                    <Account> <Participant>12345678</Participant> <Branch>0001</Branch>
                    <AccountNumber>0007654321</AccountNumber> <AccountType>CACC</AccountType>
                    <OpeningDate>2010-01-10T03:00:00Z</OpeningDate> </Account> <Owner>
                    <Type>NATURAL_PERSON</Type> <TaxIdNumber>11122233300</TaxIdNumber>
                    <Name>João Silva</Name> </Owner> <CreationDate>2019-11-18T03:00:00Z</CreationDate>
                    <KeyOwnershipDate>2019-11-18T03:00:00Z</KeyOwnershipDate> </Entry>
                    <Statistics> <LastUpdated>2020-01-17T10:00:00Z</LastUpdated> <Counters>
                    <Counter type="SETTLEMENTS" by="KEY" d3="0" d30="5" m6="30"/>
                    <Counter type="SETTLEMENTS" by="OWNER" d3="0" d30="5" m6="30"/>
                    <Counter type="SETTLEMENTS" by="ACCOUNT" d3="0" d30="5" m6="30"/>
                    <Counter type="REPORTED_FRAUDS" by="KEY" d3="0" d30="5" m6="30"/>
                    <Counter type="REPORTED_FRAUDS" by="OWNER" d3="0" d30="5" m6="30"/>
                    <Counter type="REPORTED_FRAUDS" by="ACCOUNT" d3="0" d30="5" m6="30"/>
                    <Counter type="REPORTED_AML_CFT" by="KEY" d3="0" d30="5" m6="30"/>
                    <Counter type="REPORTED_AML_CFT" by="OWNER" d3="0" d30="5" m6="30"/>
                    <Counter type="REPORTED_AML_CFT" by="ACCOUNT" d3="0" d30="5" m6="30"/>
                    <Counter type="CONFIRMED_FRAUDS" by="KEY" d3="0" d30="5" m6="30"/>
                    <Counter type="CONFIRMED_FRAUDS" by="OWNER" d3="0" d30="5" m6="30"/>
                    <Counter type="CONFIRMED_FRAUDS" by="ACCOUNT" d3="0" d30="5" m6="30"/>
                    <Counter type="CONFIRMED_AML_CFT" by="KEY" d3="0" d30="5" m6="30"/>
                    <Counter type="CONFIRMED_AML_CFT" by="OWNER" d3="0" d30="5" m6="30"/>
                    <Counter type="CONFIRMED_AML_CFT" by="ACCOUNT" d3="0" d30="5"
                    m6="30"/> </Counters> </Statistics> </GetEntryResponse>
        "404":
          description: Not found
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404'
              examples:
                example:
                  value: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"\
                    urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v1/error/NotFound</type>\n\
                    \  <title>Not found</title>\n  <status>404</status>\n  <detail>Entry\
                    \ associated with given key does not exist</detail>\n</problem> "
        "429":
          description: Rate-Limited
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/RateLimited</type>
                      <title>Rate limited</title>
                      <status>429</status>
                    </problem>
      x-openapi-router-controller: swagger_server.controllers.directory_controller
    put:
      tags:
      - Directory
      summary: Atualizar Vínculo
      description: "Atualiza um vínculo. \n\nA ser utilizado no cenário de atualizaç\
        ão da informação da conta de um cliente, permanecendo este no mesmo PSP.\n\
        Somente pode ser atualizada a informação de conta do vínculo. Outras atualizaç\
        ões do vínculo devem ser feitas\npor exclusão/inclusão do vínculo, portabilidade\
        \ ou reivindicação de posse, a depender da situação."
      operationId: update_entry
      parameters:
      - name: Key
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Key'
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateEntryRequest'
            examples:
              example:
                value: <?xml version="1.0" encoding="UTF-8" ?> <UpdateEntryRequest>
                  <Signature></Signature> <Key>+5561988887777</Key> <Account> <Participant>12345678</Participant>
                  <Branch>0001</Branch> <AccountNumber>0007654321</AccountNumber>
                  <AccountType>CACC</AccountType> <OpeningDate>2010-01-10T03:00:00Z</OpeningDate>
                  </Account> <Reason>USER_REQUESTED</Reason> </UpdateEntryRequest>
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/UpdateEntryResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <UpdateEntryResponse>
                    <Signature></Signature> <Entry> <Key>11122233300</Key> <KeyType>CPF</KeyType>
                    <Account> <Participant>12345678</Participant> <Branch>0001</Branch>
                    <AccountNumber>0007654321</AccountNumber> <AccountType>CACC</AccountType>
                    <OpeningDate>2010-01-10T03:00:00Z</OpeningDate> </Account> <Owner>
                    <Type>NATURAL_PERSON</Type> <TaxIdNumber>11122233300</TaxIdNumber>
                    <Name>João Silva</Name> </Owner> <CreationDate>2019-11-18T03:00:00Z</CreationDate>
                    <KeyOwnershipDate>2019-11-18T03:00:00Z</KeyOwnershipDate> </Entry>
                    </UpdateEntryResponse>
        "400":
          description: Bad Request
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                        <type>https://dict.pi.rsfn.net.br/api/v1/error/BadRequest</type>
                        <title>Bad Request</title>
                        <status>400</status>
                        <detail>Could not parse request body</detail>
                    </problem>
        "403":
          description: Forbidden
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>
                      <title>Forbidden</title>
                      <status>403</status>
                      <detail>Participant is not allowed to access this resource</detail>
                    </problem>
        "404":
          description: Not found
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404'
              examples:
                example:
                  value: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"\
                    urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v1/error/NotFound</type>\n\
                    \  <title>Not found</title>\n  <status>404</status>\n  <detail>Entry\
                    \ associated with given key does not exist</detail>\n</problem> "
        "503":
          description: Service Unavailable
          headers:
            Retry-After:
              description: Tempo de espera em segundos sugerido para nova requisição.
                Ver [rfc7231#section-7.1.3](https://tools.ietf.org/html/rfc7231#section-7.1.3)
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/ServiceUnavailable</type>
                      <title>Service Unavailable</title>
                      <status>503</status>
                      <detail>Service is under scheduled maintenance</detail>
                    </problem>
      x-openapi-router-controller: swagger_server.controllers.directory_controller
  /entries/{Key}/delete:
    post:
      tags:
      - Directory
      summary: Remover Vínculo
      description: Remove um vínculo de chave com conta.
      operationId: delete_entry
      parameters:
      - name: Key
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Key'
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/DeleteEntryRequest'
            examples:
              example:
                value: <?xml version="1.0" encoding="UTF-8" ?> <DeleteEntryRequest>
                  <Signature></Signature> <Key>+5561988887777</Key> <Participant>12345678</Participant>
                  <Reason>ACCOUNT_CLOSURE</Reason> </DeleteEntryRequest>
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/DeleteEntryResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <DeleteEntryResponse>
                    <Signature></Signature> <Key>+5561988887777</Key> </DeleteEntryResponse>
        "403":
          description: Forbidden
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>
                      <title>Forbidden</title>
                      <status>403</status>
                      <detail>Participant is not allowed to access this resource</detail>
                    </problem>
        "404":
          description: Not found
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404'
              examples:
                example:
                  value: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"\
                    urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v1/error/NotFound</type>\n\
                    \  <title>Not found</title>\n  <status>404</status>\n  <detail>Entry\
                    \ associated with given key does not exist</detail>\n</problem> "
        "503":
          description: Service Unavailable
          headers:
            Retry-After:
              description: Tempo de espera em segundos sugerido para nova requisição.
                Ver [rfc7231#section-7.1.3](https://tools.ietf.org/html/rfc7231#section-7.1.3)
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/ServiceUnavailable</type>
                      <title>Service Unavailable</title>
                      <status>503</status>
                      <detail>Service is under scheduled maintenance</detail>
                    </problem>
      x-openapi-router-controller: swagger_server.controllers.directory_controller
  /claims/:
    get:
      tags:
      - Claim
      summary: Listar Reivindicações
      description: "Obtém lista de reivindicações em que o participante é doador ou\
        \ reivindicador.\n\nLista de reivindicações é ordenada de forma crescente\
        \ pelo campo `LastModified` .\n\n_Atenção_: Ao percorrer a lista em intervalos\
        \ de tempo fechados, recomendável para que \nnão se pule nenhum elemento,\
        \ alguns elementos retornados poderão se repetir."
      operationId: list_claims
      parameters:
      - name: Participant
        in: query
        description: ISPB do partipante direto ou indireto interessado
        required: true
        style: form
        explode: true
        schema:
          pattern: ^[0-9]{8}
          type: string
      - name: IsDonor
        in: query
        description: Restringe a reivindicações em que o participante é doador
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: IsClaimer
        in: query
        description: Restringe a reivindicações em que o participante é reivindicador
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: Status
        in: query
        description: Status da reivindicação
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ClaimStatus'
      - name: Type
        in: query
        description: Tipo de reivindicação
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ClaimType'
      - name: ModifiedAfter
        in: query
        description: Filtra reivindicações com data-hora de modificação maior ou igual
          a `modifiedAfter`
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: ModifiedBefore
        in: query
        description: Filtra reivindicações com data-hora de modificação menor ou igual
          a `modifiedBefore`
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: Limit
        in: query
        description: Número limite de reivindicações a retornar
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          default: 20
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ListClaimsResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <ListClaimsResponse>
                    <Signature></Signature> <HasMoreElements>true</HasMoreElements>
                    <Claims> <Claim> <Type>OWNERSHIP</Type> <Key>+5561988887777</Key>
                    <KeyType>PHONE</KeyType> <ClaimerAccount> <Participant>12345678</Participant>
                    <Branch>0001</Branch> <AccountNumber>0007654321</AccountNumber>
                    <AccountType>CACC</AccountType> <OpeningDate>2010-01-10T03:00:00Z</OpeningDate>
                    </ClaimerAccount> <Claimer> <Type>NATURAL_PERSON</Type> <TaxIdNumber>11122233300</TaxIdNumber>
                    <Name>João Silva</Name> </Claimer> <DonorParticipant>87654321</DonorParticipant>
                    <Id>123e4567-e89b-12d3-a456-426655440000</Id> <Status>OPEN</Status>
                    <ResolutionPeriodEnd>2020-01-17T10:00:00Z</ResolutionPeriodEnd>
                    <CompletionPeriodEnd>2020-01-17T10:00:00Z</CompletionPeriodEnd>
                    <LastModified>2020-01-10T10:00:00Z</LastModified> </Claim> </Claims>
                    </ListClaimsResponse>
        "400":
          description: Bad Request
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                        <type>https://dict.pi.rsfn.net.br/api/v1/error/BadRequest</type>
                        <title>Bad Request</title>
                        <status>400</status>
                        <detail>Could not parse request body</detail>
                    </problem>
        "403":
          description: Forbidden
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>
                      <title>Forbidden</title>
                      <status>403</status>
                      <detail>Participant is not allowed to access this resource</detail>
                    </problem>
      x-openapi-router-controller: swagger_server.controllers.claim_controller
    post:
      tags:
      - Claim
      summary: Criar Reivindicação
      description: "Cria uma nova reivindicação. \n\nEssa operação é feita pelo participante\
        \ reivindicador a pedido do usuário final.\nO vínculo atual permanece inalterado,\
        \ até que haja a confirmação pelo PSP doador.\n\nNem todo tipo de chave pode\
        \ ser reivindicado ou portado. A tabela abaixo define as possibilidades:\n\
        \n  |  compatível?  | OWNERSHIP  | PORTABILITY  |\n  |---------------|:----------:|:------------:|\n\
        \  | CPF           |            |      ✓       |\n  | CNPJ          |    \
        \        |      ✓       |\n  | PHONE         |    ✓      |      ✓       |\n\
        \  | EMAIL         |    ✓      |      ✓       |\n  | EVP           |     \
        \       |              |"
      operationId: create_claim
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateClaimRequest'
            examples:
              phone-claim:
                value: <?xml version="1.0" encoding="UTF-8" ?> <CreateClaimRequest>
                  <Signature></Signature> <Claim> <Type>OWNERSHIP</Type> <Key>+5561988887777</Key>
                  <KeyType>PHONE</KeyType> <ClaimerAccount> <Participant>12345678</Participant>
                  <Branch>0001</Branch> <AccountNumber>0007654321</AccountNumber>
                  <AccountType>CACC</AccountType> <OpeningDate>2010-01-10T03:00:00Z</OpeningDate>
                  </ClaimerAccount> <Claimer> <Type>NATURAL_PERSON</Type> <TaxIdNumber>11122233300</TaxIdNumber>
                  <Name>João Silva</Name> </Claimer> </Claim> </CreateClaimRequest>
      responses:
        "201":
          description: Created
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateClaimResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <CreateClaimResponse>
                    <Signature></Signature> <Claim> <Type>OWNERSHIP</Type> <Key>+5561988887777</Key>
                    <KeyType>PHONE</KeyType> <ClaimerAccount> <Participant>12345678</Participant>
                    <Branch>0001</Branch> <AccountNumber>0007654321</AccountNumber>
                    <AccountType>CACC</AccountType> <OpeningDate>2010-01-10T03:00:00Z</OpeningDate>
                    </ClaimerAccount> <Claimer> <Type>NATURAL_PERSON</Type> <TaxIdNumber>11122233300</TaxIdNumber>
                    <Name>João Silva</Name> </Claimer> <DonorParticipant>87654321</DonorParticipant>
                    <Id>123e4567-e89b-12d3-a456-426655440000</Id> <Status>OPEN</Status>
                    <CompletionPeriodEnd>2020-01-17T10:00:00Z</CompletionPeriodEnd>
                    <ResolutionPeriodEnd>2020-01-17T10:00:00Z</ResolutionPeriodEnd>
                    <LastModified>2020-01-10T10:00:00Z</LastModified> </Claim> </CreateClaimResponse>
        "400":
          description: Claim Invalid
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"\
                    ?>\n<problem xmlns=\"urn:ietf:rfc:7807\">\n    <type>https://dict.pi.rsfn.net.br/api/v1/error/ClaimInvalid</type>\n\
                    \    <title>Claim is invalid</title>\n    <status>400</status>\n\
                    \    <detail>Claim has invalid fields</detail>\n    <violations>\n\
                    \        <violation>\n            <reason>Value does not match\
                    \ regex '^\\+[1-9]\\d{1,14}$'</reason>\n            <value>61988887777</value>\n\
                    \            <property>claim.key</property>\n        </violation>\n\
                    \    </violations>                    \n</problem>"
        "403":
          description: Forbidden
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>
                      <title>Forbidden</title>
                      <status>403</status>
                      <detail>Participant is not allowed to access this resource</detail>
                    </problem>
        "503":
          description: Service Unavailable
          headers:
            Retry-After:
              description: Tempo de espera em segundos sugerido para nova requisição.
                Ver [rfc7231#section-7.1.3](https://tools.ietf.org/html/rfc7231#section-7.1.3)
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/ServiceUnavailable</type>
                      <title>Service Unavailable</title>
                      <status>503</status>
                      <detail>Service is under scheduled maintenance</detail>
                    </problem>
      x-openapi-router-controller: swagger_server.controllers.claim_controller
  /claims/{ClaimId}:
    get:
      tags:
      - Claim
      summary: Consultar Reivindicação
      description: Obtém detalhes de uma reivindicação.
      operationId: get_claim
      parameters:
      - name: ClaimId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: PI_RequestingParticipant
        in: header
        description: Identificador SPB do participante (direto ou indireto) que faz
          a requisição.
        required: true
        style: simple
        explode: false
        schema:
          pattern: ^[0-9]{8}$
          type: string
          example: "12345678"
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/GetClaimResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <GetClaimResponse>
                    <Signature></Signature> <Claim> <Type>OWNERSHIP</Type> <Key>+5561988887777</Key>
                    <KeyType>PHONE</KeyType> <ClaimerAccount> <Participant>12345678</Participant>
                    <Branch>0001</Branch> <AccountNumber>0007654321</AccountNumber>
                    <AccountType>CACC</AccountType> <OpeningDate>2010-01-10T03:00:00Z</OpeningDate>
                    </ClaimerAccount> <Claimer> <Type>NATURAL_PERSON</Type> <TaxIdNumber>11122233300</TaxIdNumber>
                    <Name>João Silva</Name> </Claimer> <DonorParticipant>87654321</DonorParticipant>
                    <Id>123e4567-e89b-12d3-a456-426655440000</Id> <Status>OPEN</Status>
                    <ResolutionPeriodEnd>2020-01-17T10:00:00Z</ResolutionPeriodEnd>
                    <CompletionPeriodEnd>2020-01-17T10:00:00Z</CompletionPeriodEnd>
                    <LastModified>2020-01-10T10:00:00Z</LastModified> </Claim> </GetClaimResponse>
        "404":
          description: Not found
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404'
              examples:
                example:
                  value: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"\
                    urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v1/error/NotFound</type>\n\
                    \  <title>Not found</title>\n  <status>404</status>\n  <detail>Entry\
                    \ associated with given key does not exist</detail>\n</problem> "
      x-openapi-router-controller: swagger_server.controllers.claim_controller
  /claims/{ClaimId}/acknowledge:
    post:
      tags:
      - Claim
      summary: Receber Reivindicação
      description: "Notifica recebimento pelo participante doador de reivindicaçã\
        o com status `OPEN`.\n\n  ### Idempotência\n  A operação é idempotente. Caso\
        \ reivindicação já tenha sido recebida e ela esteja ainda com \n  status `WAITING_RESOLUTION`,\
        \ será retornada resposta equivalente à primeira requisição."
      operationId: acknowledge_claim
      parameters:
      - name: ClaimId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/AcknowledgeClaimRequest'
            examples:
              example:
                value: <?xml version="1.0" encoding="UTF-8" ?> <AcknowledgeClaimRequest>
                  <Signature></Signature> <ClaimId>123e4567-e89b-12d3-a456-426655440000</ClaimId>
                  <Participant>12345678</Participant> </AcknowledgeClaimRequest>
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/AcknowledgeClaimResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <AcknowledgeClaimResponse>
                    <Signature></Signature> <Claim> <Type>OWNERSHIP</Type> <Key>+5561988887777</Key>
                    <KeyType>PHONE</KeyType> <ClaimerAccount> <Participant>12345678</Participant>
                    <Branch>0001</Branch> <AccountNumber>0007654321</AccountNumber>
                    <AccountType>CACC</AccountType> <OpeningDate>2010-01-10T03:00:00Z</OpeningDate>
                    </ClaimerAccount> <Claimer> <Type>NATURAL_PERSON</Type> <TaxIdNumber>11122233300</TaxIdNumber>
                    <Name>João Silva</Name> </Claimer> <DonorParticipant>87654321</DonorParticipant>
                    <Id>123e4567-e89b-12d3-a456-426655440000</Id> <Status>WAITING_RESOLUTION</Status>
                    <ResolutionPeriodEnd>2020-01-17T10:00:00Z</ResolutionPeriodEnd>
                    <CompletionPeriodEnd>2020-01-17T10:00:00Z</CompletionPeriodEnd>
                    <LastModified>2020-01-10T10:00:00Z</LastModified> </Claim> </AcknowledgeClaimResponse>
        "403":
          description: Forbidden
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>
                      <title>Forbidden</title>
                      <status>403</status>
                      <detail>Participant is not allowed to access this resource</detail>
                    </problem>
        "404":
          description: Not found
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404'
              examples:
                example:
                  value: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"\
                    urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v1/error/NotFound</type>\n\
                    \  <title>Not found</title>\n  <status>404</status>\n  <detail>Entry\
                    \ associated with given key does not exist</detail>\n</problem> "
        "503":
          description: Service Unavailable
          headers:
            Retry-After:
              description: Tempo de espera em segundos sugerido para nova requisição.
                Ver [rfc7231#section-7.1.3](https://tools.ietf.org/html/rfc7231#section-7.1.3)
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/ServiceUnavailable</type>
                      <title>Service Unavailable</title>
                      <status>503</status>
                      <detail>Service is under scheduled maintenance</detail>
                    </problem>
      x-openapi-router-controller: swagger_server.controllers.claim_controller
  /claims/{ClaimId}/confirm:
    post:
      tags:
      - Claim
      summary: Confirmar Reivindicação
      description: |-
        Confirma a operação de reivindicação. Como consequência, vínculo da chave com participante doador é removido.

        Status deve estar em `WAITING_RESOLUTION`.

        Para reivindicação de posse, caso razão seja `DEFAULT_OPERATION`, o prazo de resolução (`ResolutionPeriodEnd`)
          deve ter passado. Se a razão informada for `USER_REQUESTED`, o prazo de encerramento (`CompletionPeriodEnd`)
          será adiantado para permitir o encerramento imediato pelo reivindicador.

        A tabela abaixo define, a depender da razão e do tipo, quem pode confirmar.

        <table>
          <thead>
            <tr>
              <th></th>
              <th colspan="2">OWNERSHIP</th>
              <th colspan="2">PORTABILITY</th>
            </tr>
            <tr>
              <th>Razão</th>
              <th>Doador</th>
              <th>Reivindicador</th>
              <th>Doador</th>
              <th>Reivindicador</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>USER_REQUESTED</td>
              <td>✓</td>
              <td></td>
              <td>✓</td>
              <td></td>
            </tr>
            <tr>
              <td>ACCOUNT_CLOSURE</td>
              <td></td>
              <td></td>
              <td>✓</td>
              <td></td>
            </tr>
            <tr>
              <td>DEFAULT_OPERATION</td>
              <td>✓</td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
          </tbody>
        </table>

          ### Idempotência
          A operação é idempotente. Caso reivindicação já tenha sido confirmada com os mesmos parâmetros
          e esteja ainda com status `CONFIRMED`, será retornada resposta equivalente à primeira requisição.
      operationId: confirm_claim
      parameters:
      - name: ClaimId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/ConfirmClaimRequest'
            examples:
              example:
                value: <?xml version="1.0" encoding="UTF-8" ?> <ConfirmClaimRequest>
                  <Signature></Signature> <ClaimId>123e4567-e89b-12d3-a456-426655440000</ClaimId>
                  <Participant>12345678</Participant> <Reason>USER_REQUESTED</Reason>
                  </ConfirmClaimRequest>
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ConfirmClaimResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <ConfirmClaimResponse>
                    <Signature></Signature> <Claim> <Type>OWNERSHIP</Type> <Key>+5561988887777</Key>
                    <KeyType>PHONE</KeyType> <ClaimerAccount> <Participant>12345678</Participant>
                    <Branch>0001</Branch> <AccountNumber>0007654321</AccountNumber>
                    <AccountType>CACC</AccountType> <OpeningDate>2010-01-10T03:00:00Z</OpeningDate>
                    </ClaimerAccount> <Claimer> <Type>NATURAL_PERSON</Type> <TaxIdNumber>11122233300</TaxIdNumber>
                    <Name>João Silva</Name> </Claimer> <DonorParticipant>87654321</DonorParticipant>
                    <Id>123e4567-e89b-12d3-a456-426655440000</Id> <Status>CONFIRMED</Status>
                    <ResolutionPeriodEnd>2020-01-17T10:00:00Z</ResolutionPeriodEnd>
                    <CompletionPeriodEnd>2020-01-17T10:00:00Z</CompletionPeriodEnd>
                    <LastModified>2020-01-10T10:00:00Z</LastModified> </Claim> </ConfirmClaimResponse>
        "403":
          description: Forbidden
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>
                      <title>Forbidden</title>
                      <status>403</status>
                      <detail>Participant is not allowed to access this resource</detail>
                    </problem>
        "404":
          description: Not found
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404'
              examples:
                example:
                  value: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"\
                    urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v1/error/NotFound</type>\n\
                    \  <title>Not found</title>\n  <status>404</status>\n  <detail>Entry\
                    \ associated with given key does not exist</detail>\n</problem> "
        "503":
          description: Service Unavailable
          headers:
            Retry-After:
              description: Tempo de espera em segundos sugerido para nova requisição.
                Ver [rfc7231#section-7.1.3](https://tools.ietf.org/html/rfc7231#section-7.1.3)
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/ServiceUnavailable</type>
                      <title>Service Unavailable</title>
                      <status>503</status>
                      <detail>Service is under scheduled maintenance</detail>
                    </problem>
      x-openapi-router-controller: swagger_server.controllers.claim_controller
  /claims/{ClaimId}/cancel:
    post:
      tags:
      - Claim
      summary: Cancelar Reivindicação
      description: "Cancela reivindicação. \n        \nPara reivindicação de posse,\
        \ status deve ser `WAITING_RESOLUTION` ou `CONFIRMED`.\n\nPara portabilidade,\
        \ status deve ser `WAITING_RESOLUTION`. Se razão de cancelamento for \n`DEFAULT_OPERATION`,\
        \ prazo definido pelo campo `ResolutionPeriodEnd` deve ter passado.\n\nA tabela\
        \ abaixo define, a depender da razão e do tipo, quem pode cancelar.\n\n<table>\n\
        \  <thead>\n    <tr>\n      <th></th>\n      <th colspan=\"2\">OWNERSHIP</th>\n\
        \      <th colspan=\"2\">PORTABILITY</th>\n    </tr>\n    <tr>\n      <th>Razã\
        o</th>\n      <th>Doador</th>\n      <th>Reivindicador</th>\n      <th>Doador</th>\n\
        \      <th>Reivindicador</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n\
        \      <td>USER_REQUESTED</td>\n      <td></td>\n      <td>✓</td>\n      <td>✓\
        </td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td>ACCOUNT_CLOSURE</td>\n\
        \      <td></td>\n      <td>✓</td>\n      <td></td>\n      <td>✓</td>\n  \
        \  </tr>\n    <tr>\n      <td>FRAUD</td>\n      <td>✓</td>\n      <td>✓</td>\n\
        \      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td>DEFAULT_OPERATION</td>\n\
        \      <td></td>\n      <td></td>\n      <td>✓</td>\n      <td></td>\n   \
        \ </tr>\n  </tbody>\n</table>\n\n  ### Idempotência\n  A operação é idempotente.\
        \ Caso reivindicação já tenha sido cancelada com os mesmos parâmetros, \n\
        \  será retornada resposta equivalente à primeira requisição."
      operationId: cancel_claim
      parameters:
      - name: ClaimId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/CancelClaimRequest'
            examples:
              example:
                value: <?xml version="1.0" encoding="UTF-8" ?> <CancelClaimRequest>
                  <Signature></Signature> <ClaimId>123e4567-e89b-12d3-a456-426655440000</ClaimId>
                  <Participant>12345678</Participant> <Reason>USER_REQUESTED</Reason>
                  </CancelClaimRequest>
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/CancelClaimResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <CancelClaimResponse>
                    <Signature></Signature> <Claim> <Type>OWNERSHIP</Type> <Key>+5561988887777</Key>
                    <KeyType>PHONE</KeyType> <ClaimerAccount> <Participant>12345678</Participant>
                    <Branch>0001</Branch> <AccountNumber>0007654321</AccountNumber>
                    <AccountType>CACC</AccountType> <OpeningDate>2010-01-10T03:00:00Z</OpeningDate>
                    </ClaimerAccount> <Claimer> <Type>NATURAL_PERSON</Type> <TaxIdNumber>11122233300</TaxIdNumber>
                    <Name>João Silva</Name> </Claimer> <DonorParticipant>87654321</DonorParticipant>
                    <Id>123e4567-e89b-12d3-a456-426655440000</Id> <Status>CANCELLED</Status>
                    <ResolutionPeriodEnd>2020-01-17T10:00:00Z</ResolutionPeriodEnd>
                    <CompletionPeriodEnd>2020-01-17T10:00:00Z</CompletionPeriodEnd>
                    <LastModified>2020-01-10T10:00:00Z</LastModified> </Claim> </CancelClaimResponse>
        "403":
          description: Forbidden
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>
                      <title>Forbidden</title>
                      <status>403</status>
                      <detail>Participant is not allowed to access this resource</detail>
                    </problem>
        "404":
          description: Not found
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404'
              examples:
                example:
                  value: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"\
                    urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v1/error/NotFound</type>\n\
                    \  <title>Not found</title>\n  <status>404</status>\n  <detail>Entry\
                    \ associated with given key does not exist</detail>\n</problem> "
        "503":
          description: Service Unavailable
          headers:
            Retry-After:
              description: Tempo de espera em segundos sugerido para nova requisição.
                Ver [rfc7231#section-7.1.3](https://tools.ietf.org/html/rfc7231#section-7.1.3)
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/ServiceUnavailable</type>
                      <title>Service Unavailable</title>
                      <status>503</status>
                      <detail>Service is under scheduled maintenance</detail>
                    </problem>
      x-openapi-router-controller: swagger_server.controllers.claim_controller
  /claims/{ClaimId}/complete:
    post:
      tags:
      - Claim
      summary: Concluir Reivindicação
      description: |-
        Conclui reivindicação pelo reivindicador. Como consequência, vínculo da chave com participante reivindicador é criado.

        Para reivindicação de posse, status deve ser `CONFIRMED` e prazo definido pelo campo `CompletionPeriodEnd`
        deve ter passado.

        Para portabilidade, status deve ser `CONFIRMED`.

        ### Idempotência
        A operação de conclusão de reivindicação é idempotente. Valem aqui as mesmas considerações feitas sobre esse tema
        na operação de [Criar Vínculo](#operation/createEntry).
      operationId: complete_claim
      parameters:
      - name: ClaimId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/CompleteClaimRequest'
            examples:
              example:
                value: <?xml version="1.0" encoding="UTF-8" ?> <CompleteClaimRequest>
                  <Signature></Signature> <ClaimId>123e4567-e89b-12d3-a456-426655440000</ClaimId>
                  <Participant>12345678</Participant> <RequestId>a946d533-7f22-42a5-9a9b-e87cd55c0f4d</RequestId>
                  </CompleteClaimRequest>
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/CompleteClaimResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <CompleteClaimResponse>
                    <Signature></Signature> <Claim> <Type>OWNERSHIP</Type> <Key>+5561988887777</Key>
                    <KeyType>PHONE</KeyType> <ClaimerAccount> <Participant>12345678</Participant>
                    <Branch>0001</Branch> <AccountNumber>0007654321</AccountNumber>
                    <AccountType>CACC</AccountType> <OpeningDate>2010-01-10T03:00:00Z</OpeningDate>
                    </ClaimerAccount> <Claimer> <Type>NATURAL_PERSON</Type> <TaxIdNumber>11122233300</TaxIdNumber>
                    <Name>João Silva</Name> </Claimer> <DonorParticipant>87654321</DonorParticipant>
                    <Id>123e4567-e89b-12d3-a456-426655440000</Id> <Status>COMPLETED</Status>
                    <ResolutionPeriodEnd>2020-01-17T10:00:00Z</ResolutionPeriodEnd>
                    <CompletionPeriodEnd>2020-01-17T10:00:00Z</CompletionPeriodEnd>
                    <LastModified>2020-01-10T10:00:00Z</LastModified> </Claim> </CompleteClaimResponse>
        "403":
          description: Forbidden
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>
                      <title>Forbidden</title>
                      <status>403</status>
                      <detail>Participant is not allowed to access this resource</detail>
                    </problem>
        "404":
          description: Not found
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404'
              examples:
                example:
                  value: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"\
                    urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v1/error/NotFound</type>\n\
                    \  <title>Not found</title>\n  <status>404</status>\n  <detail>Entry\
                    \ associated with given key does not exist</detail>\n</problem> "
        "503":
          description: Service Unavailable
          headers:
            Retry-After:
              description: Tempo de espera em segundos sugerido para nova requisição.
                Ver [rfc7231#section-7.1.3](https://tools.ietf.org/html/rfc7231#section-7.1.3)
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/ServiceUnavailable</type>
                      <title>Service Unavailable</title>
                      <status>503</status>
                      <detail>Service is under scheduled maintenance</detail>
                    </problem>
      x-openapi-router-controller: swagger_server.controllers.claim_controller
  /sync-verifications/:
    post:
      tags:
      - Reconciliation
      summary: Verificar Sincronismo
      description: Cria uma verificação de sincronismo para um partipante e tipo de
        chave.
      operationId: create_sync_verification
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateSyncVerificationRequest'
            examples:
              example:
                value: <?xml version="1.0" encoding="UTF-8" ?> <CreateSyncVerificationRequest>
                  <Signature></Signature> <SyncVerification> <Participant>12345678</Participant>
                  <KeyType>CPF</KeyType> <ParticipantSyncVerifier>e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855</ParticipantSyncVerifier>
                  </SyncVerification> </CreateSyncVerificationRequest>
      responses:
        "201":
          description: Created
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateSyncVerificationResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <CreateSyncVerificationResponse>
                    <Signature></Signature> <SyncVerification> <Participant>12345678</Participant>
                    <KeyType>CPF</KeyType> <ParticipantSyncVerifier>e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855</ParticipantSyncVerifier>
                    <Id>1234</Id> <Result>OK</Result> </SyncVerification> </CreateSyncVerificationResponse>
        "400":
          description: Bad Request
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                        <type>https://dict.pi.rsfn.net.br/api/v1/error/BadRequest</type>
                        <title>Bad Request</title>
                        <status>400</status>
                        <detail>Could not parse request body</detail>
                    </problem>
        "403":
          description: Forbidden
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>
                      <title>Forbidden</title>
                      <status>403</status>
                      <detail>Participant is not allowed to access this resource</detail>
                    </problem>
        "503":
          description: Service Unavailable
          headers:
            Retry-After:
              description: Tempo de espera em segundos sugerido para nova requisição.
                Ver [rfc7231#section-7.1.3](https://tools.ietf.org/html/rfc7231#section-7.1.3)
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/ServiceUnavailable</type>
                      <title>Service Unavailable</title>
                      <status>503</status>
                      <detail>Service is under scheduled maintenance</detail>
                    </problem>
      x-openapi-router-controller: swagger_server.controllers.reconciliation_controller
  /cids/files/:
    post:
      tags:
      - Reconciliation
      summary: Criar Arquivo de CIDs
      description: |-
        Cria um arquivo contendo todos os CIDs de um determinado tipo de chave do participante.
        O formato do arquivo é um CID por linha ('\n' como EOL), sem ordem definida.

        Geração do arquivo é feita assincronamente.
      operationId: create_cid_set_file
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateCidSetFileRequest'
            examples:
              phone:
                value: <?xml version="1.0" encoding="UTF-8" ?> <CreateCidSetFileRequest>
                  <Signature></Signature> <Participant>12345678</Participant> <KeyType>PHONE</KeyType>
                  </CreateCidSetFileRequest>
      responses:
        "201":
          description: Created
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateCidSetFileResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <CreateCidSetFileResponse>
                    <Signature></Signature> <CidSetFile> <Id>1234</Id> <Status>REQUESTED</Status>
                    <Participant>12345678</Participant> <KeyType>PHONE</KeyType> <RequestTime>2020-01-10T10:00:00Z</RequestTime>
                    </CidSetFile> </CreateCidSetFileResponse>
        "400":
          description: Bad Request
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                        <type>https://dict.pi.rsfn.net.br/api/v1/error/BadRequest</type>
                        <title>Bad Request</title>
                        <status>400</status>
                        <detail>Could not parse request body</detail>
                    </problem>
        "403":
          description: Forbidden
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>
                      <title>Forbidden</title>
                      <status>403</status>
                      <detail>Participant is not allowed to access this resource</detail>
                    </problem>
        "503":
          description: Service Unavailable
          headers:
            Retry-After:
              description: Tempo de espera em segundos sugerido para nova requisição.
                Ver [rfc7231#section-7.1.3](https://tools.ietf.org/html/rfc7231#section-7.1.3)
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/ServiceUnavailable</type>
                      <title>Service Unavailable</title>
                      <status>503</status>
                      <detail>Service is under scheduled maintenance</detail>
                    </problem>
      x-openapi-router-controller: swagger_server.controllers.reconciliation_controller
  /cids/files/{Id}:
    get:
      tags:
      - Reconciliation
      summary: Consultar Arquivo de CIDs
      description: Obtém detalhes do arquivo de CIDs requisitado
      operationId: get_cid_set_file
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: PI_RequestingParticipant
        in: header
        description: Identificador SPB do participante (direto ou indireto) que faz
          a requisição.
        required: true
        style: simple
        explode: false
        schema:
          pattern: ^[0-9]{8}$
          type: string
          example: "12345678"
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/GetCidSetFileResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <GetCidSetFileResponse>
                    <Signature></Signature> <CidSetFile> <Id>1234</Id> <Status>AVAILABLE</Status>
                    <Participant>12345678</Participant> <KeyType>PHONE</KeyType> <RequestTime>2020-01-10T10:00:00Z</RequestTime>
                    <CreationTime>2020-01-10T10:00:10Z</CreationTime> <Url>https://some_download_url/apath/12345678/dict_file_name.cids</Url>
                    <Bytes>3200000</Bytes> <Sha256>f0e4c2f76c58916ec258f246851bea091d14d4247a2fc3e18694461b1816e13b</Sha256>
                    </CidSetFile> </GetCidSetFileResponse>
        "403":
          description: Forbidden
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>
                      <title>Forbidden</title>
                      <status>403</status>
                      <detail>Participant is not allowed to access this resource</detail>
                    </problem>
        "404":
          description: Not found
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404'
              examples:
                example:
                  value: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"\
                    urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v1/error/NotFound</type>\n\
                    \  <title>Not found</title>\n  <status>404</status>\n  <detail>Entry\
                    \ associated with given key does not exist</detail>\n</problem> "
      x-openapi-router-controller: swagger_server.controllers.reconciliation_controller
  /cids/events:
    get:
      tags:
      - Reconciliation
      summary: Listar Eventos de CIDs
      description: |-
        Lista os eventos de CIDs para um tipo de chave do participante, ordenados de forma crescente por `Timestamp`.

        A tabela abaixo resume os eventos de CIDs gerados como conseqüência de cada operação.

        |  Operação                                            |  Eventos de CID             |
        |------------------------------------------------------|-----------------------------|
        |  [Criar Vínculo](#operation/createEntry)             | adiciona                    |
        |  [Remover Vínculo](#operation/deleteEntry)           | remove                      |
        |  [Atualizar Vínculo](#operation/updateEntry)         | remove e adiciona           |
        |  [Confirmar Reivindicação](#operation/confirmClaim)  | remove (PSP doador)         |
        |  [Concluir Reivindicação](#operation/completeClaim)  | adiciona (PSP reivindicador)|
      operationId: list_cid_set_events
      parameters:
      - name: Participant
        in: query
        description: ISPB do partipante direto ou indireto interessado
        required: true
        style: form
        explode: true
        schema:
          pattern: ^[0-9]{8}
          type: string
      - name: KeyType
        in: query
        description: Tipo de chave
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/KeyType'
      - name: StartTime
        in: query
        description: Filtra eventos com data-hora maior ou igual a `StartTime`
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: EndTime
        in: query
        description: Filtra eventos com data-hora menor ou igual a `EndTime`
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: Limit
        in: query
        description: Número limite de eventos a retornar
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ListCidSetEventsResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <ListCidSetEventsResponse>
                    <Signature></Signature> <HasMoreElements>true</HasMoreElements>
                    <Participant>12345678</Participant> <KeyType>CPF</KeyType> <StartTime>2020-01-10T10:00:00Z</StartTime>
                    <EndTime>2020-01-10T11:00:00Z</EndTime> <SyncVerifierStart>ed02457b5c41d964dbd2f2a609d63fe1bb7528dbe55e1abf5b52c249cd735797</SyncVerifierStart>
                    <SyncVerifierEnd>a592f5fb5bef95a3ec8431ebaf609e1af1e4c1b46edb0475394c5595988c748c</SyncVerifierEnd>
                    <CidSetEvents> <CidSetEvent> <Type>ADDED</Type> <Cid>ca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb</Cid>
                    <Timestamp>2020-01-10T10:00:00Z</Timestamp> </CidSetEvent> <CidSetEvent>
                    <Type>REMOVED</Type> <Cid>961b6dd3ede3cb8ecbaacbd68de040cd78eb2ed5889130cceb4c49268ea4d506</Cid>
                    <Timestamp>2020-01-10T11:11:11Z</Timestamp> </CidSetEvent> </CidSetEvents>
                    </ListCidSetEventsResponse>
        "400":
          description: Bad Request
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                        <type>https://dict.pi.rsfn.net.br/api/v1/error/BadRequest</type>
                        <title>Bad Request</title>
                        <status>400</status>
                        <detail>Could not parse request body</detail>
                    </problem>
        "403":
          description: Forbidden
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>
                      <title>Forbidden</title>
                      <status>403</status>
                      <detail>Participant is not allowed to access this resource</detail>
                    </problem>
      x-openapi-router-controller: swagger_server.controllers.reconciliation_controller
  /cids/entries/{Cid}:
    get:
      tags:
      - Reconciliation
      summary: Consultar Vínculo por CID
      description: Obtém detalhes de um vínculo ativo identificado pelo CID
      operationId: get_entry_by_cid
      parameters:
      - name: Cid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Cid'
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/GetEntryByCidResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <GetEntryByCidResponse>
                    <Signature></Signature> <Cid>ca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb</Cid>
                    <Entry> <Key>11122233300</Key> <KeyType>CPF</KeyType> <Account>
                    <Participant>12345678</Participant> <Branch>0001</Branch> <AccountNumber>0007654321</AccountNumber>
                    <AccountType>CACC</AccountType> <OpeningDate>2010-01-10T03:00:00Z</OpeningDate>
                    </Account> <Owner> <Type>NATURAL_PERSON</Type> <TaxIdNumber>11122233300</TaxIdNumber>
                    <Name>João Silva</Name> </Owner> <CreationDate>2019-11-18T03:00:00Z</CreationDate>
                    <KeyOwnershipDate>2019-11-18T03:00:00Z</KeyOwnershipDate> </Entry>
                    </GetEntryByCidResponse>
        "403":
          description: Forbidden
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>
                      <title>Forbidden</title>
                      <status>403</status>
                      <detail>Participant is not allowed to access this resource</detail>
                    </problem>
        "404":
          description: Not found
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404'
              examples:
                example:
                  value: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"\
                    urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v1/error/NotFound</type>\n\
                    \  <title>Not found</title>\n  <status>404</status>\n  <detail>Entry\
                    \ associated with given key does not exist</detail>\n</problem> "
      x-openapi-router-controller: swagger_server.controllers.reconciliation_controller
  /disputes/:
    get:
      tags:
      - Dispute
      summary: Listar Disputas
      description: |-
        Obtém lista de disputas em que o participante é parte.

        Lista de disputas é ordenada de forma crescente pelo campo `LastModified` .
      operationId: list_disputes
      parameters:
      - name: Participant
        in: query
        description: ISPB do partipante direto ou indireto interessado
        required: true
        style: form
        explode: true
        schema:
          pattern: ^[0-9]{8}$
          type: string
      - name: IsPayer
        in: query
        description: Restringe a disputas em que o participante é o pagador
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: IsDisputed
        in: query
        description: Restringe a disputas em que o participante é o recebedor
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: Status
        in: query
        description: Status da disputa
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/DisputeStatus'
      - name: IncludeDetails
        in: query
        description: Inclui os detalhes da disputa
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: ModifiedAfter
        in: query
        description: Filtra disputas com data-hora de modificação maior ou igual a
          `modifiedAfter`
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: ModifiedBefore
        in: query
        description: Filtra disputas com data-hora de modificação menor ou igual a
          `modifiedBefore`
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: Limit
        in: query
        description: Número limite de disputas a retornar
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          default: 20
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ListDisputesResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <ListDisputesResponse>
                    <Signature></Signature> <HasMoreElements>true</HasMoreElements>
                    <Disputes> <Dispute> <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id>
                    <Status>CLOSED</Status> <PayerParticipant>99999010</PayerParticipant>
                    <DisputedParticipant>99999011</DisputedParticipant> <DisputedTransactionId>E9999901012341234123412345678900</DisputedTransactionId>
                    <Reason>FRAUD</Reason> <DisputedAmount>1000.00</DisputedAmount>
                    <CreationTime>2020-01-17T10:00:00Z</CreationTime> <LastModified>2020-01-19T10:00:00Z</LastModified>
                    <Resolution> <Result>ACCEPTED</Result> <RefundType>PARTIAL</RefundType>
                    <RefundTransactionId>D9999901012341234123412345678900</RefundTransactionId>
                    </Resolution> </Dispute> </Disputes> </ListDisputesResponse>
        "400":
          description: Bad Request
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                        <type>https://dict.pi.rsfn.net.br/api/v1/error/BadRequest</type>
                        <title>Bad Request</title>
                        <status>400</status>
                        <detail>Could not parse request body</detail>
                    </problem>
        "403":
          description: Forbidden
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>
                      <title>Forbidden</title>
                      <status>403</status>
                      <detail>Participant is not allowed to access this resource</detail>
                    </problem>
      x-openapi-router-controller: swagger_server.controllers.dispute_controller
    post:
      tags:
      - Dispute
      summary: Criar Disputa
      description: Cria uma disputa. Utilizado pelo participante do usuário pagador
        para criar uma disputa sobre uma transação realizada.
      operationId: create_dispute
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateDisputeRequest'
            examples:
              example:
                value: <?xml version="1.0" encoding="UTF-8" ?> <CreateDisputeRequest>
                  <Signature></Signature> <Participant>99999010</Participant> <Dispute>
                  <DisputedTransactionId>E9999901012341234123412345678900</DisputedTransactionId>
                  <Reason>FRAUD</Reason> <DisputedAmount>1000.00</DisputedAmount>
                  <Details>Transação feita através de QR Code falso em boleto</Details>
                  </Dispute> </CreateDisputeRequest>
      responses:
        "201":
          description: Created
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateDisputeResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <CreateDisputeResponse>
                    <Signature></Signature> <Dispute> <DisputedTransactionId>E9999901012341234123412345678900</DisputedTransactionId>
                    <Reason>FRAUD</Reason> <DisputedAmount>1000.00</DisputedAmount>
                    <Details>Transação feita através de QR Code falso em boleto</Details>
                    <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id> <Status>OPEN</Status>
                    <PayerParticipant>99999010</PayerParticipant> <DisputedParticipant>99999011</DisputedParticipant>
                    <CreationTime>2020-01-17T10:00:00Z</CreationTime> <LastModified>2020-01-17T10:00:00Z</LastModified>
                    </Dispute> </CreateDisputeResponse>
        "400":
          description: Bad Request
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                        <type>https://dict.pi.rsfn.net.br/api/v1/error/BadRequest</type>
                        <title>Bad Request</title>
                        <status>400</status>
                        <detail>Could not parse request body</detail>
                    </problem>
        "403":
          description: Forbidden
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>
                      <title>Forbidden</title>
                      <status>403</status>
                      <detail>Participant is not allowed to access this resource</detail>
                    </problem>
        "503":
          description: Service Unavailable
          headers:
            Retry-After:
              description: Tempo de espera em segundos sugerido para nova requisição.
                Ver [rfc7231#section-7.1.3](https://tools.ietf.org/html/rfc7231#section-7.1.3)
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/ServiceUnavailable</type>
                      <title>Service Unavailable</title>
                      <status>503</status>
                      <detail>Service is under scheduled maintenance</detail>
                    </problem>
      x-openapi-router-controller: swagger_server.controllers.dispute_controller
  /disputes/{DisputeId}:
    get:
      tags:
      - Dispute
      summary: Consultar Disputa
      description: Obtém detalhes de uma disputa.
      operationId: get_dispute
      parameters:
      - name: DisputeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: PI_RequestingParticipant
        in: header
        description: Identificador SPB do participante (direto ou indireto) que faz
          a requisição.
        required: true
        style: simple
        explode: false
        schema:
          pattern: ^[0-9]{8}$
          type: string
          example: "12345678"
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/GetDisputeResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <GetDisputeResponse>
                    <Signature></Signature> <Dispute> <DisputedTransactionId>E9999901012341234123412345678900</DisputedTransactionId>
                    <Reason>FRAUD</Reason> <DisputedAmount>1000.00</DisputedAmount>
                    <Details>Transação feita através de QR Code falso em boleto</Details>
                    <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id> <Status>ACKNOWLEDGED</Status>
                    <PayerParticipant>99999010</PayerParticipant> <DisputedParticipant>99999011</DisputedParticipant>
                    <CreationTime>2020-01-17T10:00:00Z</CreationTime> <LastModified>2020-01-17T10:00:00Z</LastModified>
                    </Dispute> </GetDisputeResponse>
        "404":
          description: Not found
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404'
              examples:
                example:
                  value: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"\
                    urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v1/error/NotFound</type>\n\
                    \  <title>Not found</title>\n  <status>404</status>\n  <detail>Entry\
                    \ associated with given key does not exist</detail>\n</problem> "
      x-openapi-router-controller: swagger_server.controllers.dispute_controller
  /disputes/{DisputeId}/acknowledge:
    post:
      tags:
      - Dispute
      summary: Receber Disputa
      description: "Notifica recebimento pelo participante demandado de uma disputa\
        \ com status `OPEN`.\n\n  ### Idempotência\n  A operação é idempotente. Caso\
        \ disputa já tenha sido recebida e ela esteja ainda com \n  status `ACKNOWLEDGED`,\
        \ será retornada resposta equivalente à primeira requisição."
      operationId: acknowledge_dispute
      parameters:
      - name: DisputeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/AcknowledgeDisputeRequest'
            examples:
              example:
                value: <?xml version="1.0" encoding="UTF-8" ?> <AcknowledgeDisputeRequest>
                  <Signature></Signature> <DisputeId>91d65e98-97c0-4b0f-b577-73625da1f9fc</DisputeId>
                  <Participant>12345678</Participant> </AcknowledgeDisputeRequest>
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/AcknowledgeDisputeResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <AcknowledgeDisputeResponse>
                    <Signature></Signature> <Dispute> <DisputedTransactionId>E9999901012341234123412345678900</DisputedTransactionId>
                    <Reason>FRAUD</Reason> <DisputedAmount>1000.00</DisputedAmount>
                    <Details>Transação feita através de QR Code falso em boleto</Details>
                    <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id> <Status>ACKNOWLEDGED</Status>
                    <PayerParticipant>99999010</PayerParticipant> <DisputedParticipant>99999011</DisputedParticipant>
                    <CreationTime>2020-01-17T10:00:00Z</CreationTime> <LastModified>2020-01-17T10:00:00Z</LastModified>
                    </Dispute> </AcknowledgeDisputeResponse>
        "403":
          description: Forbidden
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>
                      <title>Forbidden</title>
                      <status>403</status>
                      <detail>Participant is not allowed to access this resource</detail>
                    </problem>
        "404":
          description: Not found
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404'
              examples:
                example:
                  value: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"\
                    urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v1/error/NotFound</type>\n\
                    \  <title>Not found</title>\n  <status>404</status>\n  <detail>Entry\
                    \ associated with given key does not exist</detail>\n</problem> "
        "503":
          description: Service Unavailable
          headers:
            Retry-After:
              description: Tempo de espera em segundos sugerido para nova requisição.
                Ver [rfc7231#section-7.1.3](https://tools.ietf.org/html/rfc7231#section-7.1.3)
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/ServiceUnavailable</type>
                      <title>Service Unavailable</title>
                      <status>503</status>
                      <detail>Service is under scheduled maintenance</detail>
                    </problem>
      x-openapi-router-controller: swagger_server.controllers.dispute_controller
  /disputes/{DisputeId}/cancel:
    post:
      tags:
      - Dispute
      summary: Cancelar Disputa
      description: "Cancela a disputa. Só pode ser realizada pelo participante pagador.\n\
        \n  ### Idempotência\n  A operação é idempotente. Caso disputa já tenha sido\
        \ cancelada com os mesmos parâmetros, \n  será retornada resposta equivalente\
        \ à primeira requisição."
      operationId: cancel_dispute
      parameters:
      - name: DisputeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/CancelDisputeRequest'
            examples:
              example:
                value: <?xml version="1.0" encoding="UTF-8" ?> <CancelDisputeRequest>
                  <Signature></Signature> <DisputeId>91d65e98-97c0-4b0f-b577-73625da1f9fc</DisputeId>
                  <Participant>12345678</Participant> </CancelDisputeRequest>
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/CancelDisputeResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <CancelDisputeResponse>
                    <Signature></Signature> <Dispute> <DisputedTransactionId>E9999901012341234123412345678900</DisputedTransactionId>
                    <Reason>FRAUD</Reason> <DisputedAmount>1000.00</DisputedAmount>
                    <Details>Transação feita através de QR Code falso em boleto</Details>
                    <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id> <Status>CANCELLED</Status>
                    <PayerParticipant>99999010</PayerParticipant> <DisputedParticipant>99999011</DisputedParticipant>
                    <CreationTime>2020-01-17T10:00:00Z</CreationTime> <LastModified>2020-01-18T10:00:00Z</LastModified>
                    </Dispute> </CancelDisputeResponse>
        "403":
          description: Forbidden
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>
                      <title>Forbidden</title>
                      <status>403</status>
                      <detail>Participant is not allowed to access this resource</detail>
                    </problem>
        "404":
          description: Not found
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404'
              examples:
                example:
                  value: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"\
                    urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v1/error/NotFound</type>\n\
                    \  <title>Not found</title>\n  <status>404</status>\n  <detail>Entry\
                    \ associated with given key does not exist</detail>\n</problem> "
        "503":
          description: Service Unavailable
          headers:
            Retry-After:
              description: Tempo de espera em segundos sugerido para nova requisição.
                Ver [rfc7231#section-7.1.3](https://tools.ietf.org/html/rfc7231#section-7.1.3)
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/ServiceUnavailable</type>
                      <title>Service Unavailable</title>
                      <status>503</status>
                      <detail>Service is under scheduled maintenance</detail>
                    </problem>
      x-openapi-router-controller: swagger_server.controllers.dispute_controller
  /disputes/{DisputeId}/close:
    post:
      tags:
      - Dispute
      summary: Fechar Disputa
      description: "Fecha a disputa. Só pode ser realizada pelo participante demandado.\n\
        \n  ### Idempotência\n  A operação é idempotente. Caso disputa já tenha sido\
        \ fechada com os mesmos parâmetros, \n  será retornada resposta equivalente\
        \ à primeira requisição."
      operationId: close_dispute
      parameters:
      - name: DisputeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/CloseDisputeRequest'
            examples:
              example:
                value: <?xml version="1.0" encoding="UTF-8" ?> <CloseDisputeRequest>
                  <Signature></Signature> <DisputeId>91d65e98-97c0-4b0f-b577-73625da1f9fc</DisputeId>
                  <Participant>12345678</Participant> <Resolution> <Result>ACCEPTED</Result>
                  <RefundType>PARTIAL</RefundType> <RefundTransactionId>D9999901012341234123412345678900</RefundTransactionId>
                  <Details>A transação foi fraudulenta. A devolução foi parcial por
                  saldo insuficiente.</Details> </Resolution> </CloseDisputeRequest>
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/CloseDisputeResponse'
              examples:
                example:
                  value: <?xml version="1.0" encoding="UTF-8" ?> <CloseDisputeResponse>
                    <Signature></Signature> <Dispute> <DisputedTransactionId>E9999901012341234123412345678900</DisputedTransactionId>
                    <Reason>FRAUD</Reason> <DisputedAmount>1000.00</DisputedAmount>
                    <Details>Transação feita através de QR Code falso em boleto</Details>
                    <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id> <Status>CLOSED</Status>
                    <PayerParticipant>99999010</PayerParticipant> <DisputedParticipant>99999011</DisputedParticipant>
                    <CreationTime>2020-01-17T10:00:00Z</CreationTime> <LastModified>2020-01-17T10:00:00Z</LastModified>
                    <Resolution> <Result>ACCEPTED</Result> <RefundType>PARTIAL</RefundType>
                    <RefundTransactionId>D9999901012341234123412345678900</RefundTransactionId>
                    <Details>A trasação foi comprovadamente fraudulenta. A devolução
                    foi parcial por saldo insuficiente</Details> </Resolution> </Dispute>
                    </CloseDisputeResponse>
        "403":
          description: Forbidden
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>
                      <title>Forbidden</title>
                      <status>403</status>
                      <detail>Participant is not allowed to access this resource</detail>
                    </problem>
        "404":
          description: Not found
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404'
              examples:
                example:
                  value: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"\
                    urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v1/error/NotFound</type>\n\
                    \  <title>Not found</title>\n  <status>404</status>\n  <detail>Entry\
                    \ associated with given key does not exist</detail>\n</problem> "
        "503":
          description: Service Unavailable
          headers:
            Retry-After:
              description: Tempo de espera em segundos sugerido para nova requisição.
                Ver [rfc7231#section-7.1.3](https://tools.ietf.org/html/rfc7231#section-7.1.3)
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/problem+xml:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
              examples:
                example:
                  value: |-
                    <?xml version="1.0" encoding="UTF-8"?>
                    <problem xmlns="urn:ietf:rfc:7807">
                      <type>https://dict.pi.rsfn.net.br/api/v1/error/ServiceUnavailable</type>
                      <title>Service Unavailable</title>
                      <status>503</status>
                      <detail>Service is under scheduled maintenance</detail>
                    </problem>
      x-openapi-router-controller: swagger_server.controllers.dispute_controller
components:
  schemas:
    AccountType:
      pattern: ^[A-Z]{4}$
      type: string
      description: Tipo de conta, conforme dicionário de domínio para a mensagem pacs.008
        do SPI.
      example: CACC
      enum:
      - CACC
      - SLRY
      - SVGS
    BrazilianAccount:
      required:
      - AccountNumber
      - AccountType
      - OpeningDate
      - Participant
      type: object
      properties:
        Participant:
          allOf:
          - pattern: ^[0-9]{8}$
            type: string
            example: "12345678"
          - description: Identificador SPB do provedor da conta
        Branch:
          pattern: ^[0-9]{1,4}$
          type: string
          description: Agência, sem dígito verificador.
          example: "0001"
        AccountNumber:
          pattern: ^[0-9]{1,20}$
          type: string
          description: Número de conta, incluindo verificador. Se verificador for
            letra, substituir por 0.
          example: "0007654321"
        AccountType:
          pattern: ^[A-Z]{4}$
          type: string
          description: Tipo de conta, conforme dicionário de domínio para a mensagem
            pacs.008 do SPI.
          example: CACC
          enum:
          - CACC
          - SLRY
          - SVGS
        OpeningDate:
          type: string
          description: Data de abertura da conta. Para o horário, caso não seja conhecido,
            convenciona-se o início do dia em BRT
          format: date-time
      description: Dados de conta transacional no Brasil.
    Key:
      maxLength: 77
      type: string
      description: Chave de endereçamento
      example: "12345678901"
    KeyType:
      type: string
      description: Tipo de chave. _Novos tipos podem surgir_.
      example: CPF
      enum:
      - CPF
      - CNPJ
      - PHONE
      - EMAIL
      - EVP
    NaturalPerson:
      required:
      - Name
      - TaxIdNumber
      - Type
      type: object
      properties:
        Type:
          type: string
          default: NATURAL_PERSON
        TaxIdNumber:
          pattern: ^[0-9]{11}$
          type: string
          description: CPF - Cadastro de Pessoa Física
          example: "11122233300"
        Name:
          maxLength: 100
          pattern: ^(?=[\u000A\u000D\u0020-\u007E\u0085\u00A0-\u00FF])[\p{L}\- ]+$
          type: string
          description: Nome completo
          example: João Silva
    LegalPerson:
      required:
      - Name
      - TaxIdNumber
      - Type
      type: object
      properties:
        Type:
          type: string
          default: LEGAL_PERSON
        TaxIdNumber:
          pattern: '[0-9]{14}'
          type: string
          description: CNPJ - Cadastro Nacional de Pessoa Jurídica
          example: "11222333000150"
        Name:
          maxLength: 100
          pattern: ^(?=[\u000A\u000D\u0020-\u007E\u0085\u00A0-\u00FF])[\p{L}\d\'\-\&\.\,\/\\
            ]+$
          type: string
          description: Razão social.
          example: Padaria Tres Irmãos Ltda
        TradeName:
          maxLength: 100
          pattern: ^(?=[\u000A\u000D\u0020-\u007E\u0085\u00A0-\u00FF])[\p{L}\d\'\-\&\.\,\/\\
            ]+$
          type: string
          description: Nome fantasia.
          example: Padaria 3 Irmãos
    ISPB:
      pattern: ^[0-9]{8}$
      type: string
      example: "12345678"
    Entry:
      required:
      - Account
      - KeyType
      - Owner
      type: object
      properties:
        Key:
          maxLength: 77
          type: string
          description: Chave de endereçamento
          example: "12345678901"
        KeyType:
          type: string
          description: Tipo de chave. _Novos tipos podem surgir_.
          example: CPF
          enum:
          - CPF
          - CNPJ
          - PHONE
          - EMAIL
          - EVP
        Account:
          $ref: '#/components/schemas/Entry_Account'
        Owner:
          discriminator:
            propertyName: Type
            mapping:
              NATURAL_PERSON: '#/NaturalPerson'
              LEGAL_PERSON: '#/LegalPerson'
          oneOf:
          - required:
            - Name
            - TaxIdNumber
            - Type
            type: object
            properties:
              Type:
                type: string
                default: NATURAL_PERSON
              TaxIdNumber:
                pattern: ^[0-9]{11}$
                type: string
                description: CPF - Cadastro de Pessoa Física
                example: "11122233300"
              Name:
                maxLength: 100
                pattern: ^(?=[\u000A\u000D\u0020-\u007E\u0085\u00A0-\u00FF])[\p{L}\-
                  ]+$
                type: string
                description: Nome completo
                example: João Silva
          - required:
            - Name
            - TaxIdNumber
            - Type
            type: object
            properties:
              Type:
                type: string
                default: LEGAL_PERSON
              TaxIdNumber:
                pattern: '[0-9]{14}'
                type: string
                description: CNPJ - Cadastro Nacional de Pessoa Jurídica
                example: "11222333000150"
              Name:
                maxLength: 100
                pattern: ^(?=[\u000A\u000D\u0020-\u007E\u0085\u00A0-\u00FF])[\p{L}\d\'\-\&\.\,\/\\
                  ]+$
                type: string
                description: Razão social.
                example: Padaria Tres Irmãos Ltda
              TradeName:
                maxLength: 100
                pattern: ^(?=[\u000A\u000D\u0020-\u007E\u0085\u00A0-\u00FF])[\p{L}\d\'\-\&\.\,\/\\
                  ]+$
                type: string
                description: Nome fantasia.
                example: Padaria 3 Irmãos
      description: Vínculo entre uma chave de endereçamento, conta transacional e
        seu dono.
      example:
        Account:
          OpeningDate: 2000-01-23T04:56:07.000+00:00
          Participant: ""
          Branch: "0001"
          AccountType: CACC
          AccountNumber: "0007654321"
        Owner: ""
        KeyType: CPF
        Key: "12345678901"
    ExtendedEntry:
      allOf:
      - required:
        - Account
        - KeyType
        - Owner
        type: object
        properties:
          Key:
            maxLength: 77
            type: string
            description: Chave de endereçamento
            example: "12345678901"
          KeyType:
            type: string
            description: Tipo de chave. _Novos tipos podem surgir_.
            example: CPF
            enum:
            - CPF
            - CNPJ
            - PHONE
            - EMAIL
            - EVP
          Account:
            $ref: '#/components/schemas/Entry_Account'
          Owner:
            discriminator:
              propertyName: Type
              mapping:
                NATURAL_PERSON: '#/NaturalPerson'
                LEGAL_PERSON: '#/LegalPerson'
            oneOf:
            - required:
              - Name
              - TaxIdNumber
              - Type
              type: object
              properties:
                Type:
                  type: string
                  default: NATURAL_PERSON
                TaxIdNumber:
                  pattern: ^[0-9]{11}$
                  type: string
                  description: CPF - Cadastro de Pessoa Física
                  example: "11122233300"
                Name:
                  maxLength: 100
                  pattern: ^(?=[\u000A\u000D\u0020-\u007E\u0085\u00A0-\u00FF])[\p{L}\-
                    ]+$
                  type: string
                  description: Nome completo
                  example: João Silva
            - required:
              - Name
              - TaxIdNumber
              - Type
              type: object
              properties:
                Type:
                  type: string
                  default: LEGAL_PERSON
                TaxIdNumber:
                  pattern: '[0-9]{14}'
                  type: string
                  description: CNPJ - Cadastro Nacional de Pessoa Jurídica
                  example: "11222333000150"
                Name:
                  maxLength: 100
                  pattern: ^(?=[\u000A\u000D\u0020-\u007E\u0085\u00A0-\u00FF])[\p{L}\d\'\-\&\.\,\/\\
                    ]+$
                  type: string
                  description: Razão social.
                  example: Padaria Tres Irmãos Ltda
                TradeName:
                  maxLength: 100
                  pattern: ^(?=[\u000A\u000D\u0020-\u007E\u0085\u00A0-\u00FF])[\p{L}\d\'\-\&\.\,\/\\
                    ]+$
                  type: string
                  description: Nome fantasia.
                  example: Padaria 3 Irmãos
        description: Vínculo entre uma chave de endereçamento, conta transacional
          e seu dono.
      - required:
        - CreationDate
        - Key
        - KeyOwnershipDate
        type: object
        properties:
          CreationDate:
            type: string
            description: Data de criação do vínculo.
            format: date-time
          KeyOwnershipDate:
            type: string
            description: "Data a partir da qual o dono tem posse ininterrupta da chave\
              \ de endereçamento. \nPosse da chave aqui é definida pela existência\
              \ de um vínculo associando a chave ao dono, \npossivelmente com contas\
              \ distintas."
            format: date-time
        xml:
          name: Entry
    EntryOperationReason:
      type: string
      enum:
      - USER_REQUESTED
      - ACCOUNT_CLOSURE
      - BRANCH_TRANSFER
      - ENTRY_INACTIVITY
      - RECONCILIATION
      - FRAUD
    ClaimStatus:
      type: string
      enum:
      - OPEN
      - WAITING_RESOLUTION
      - CONFIRMED
      - CANCELLED
      - COMPLETED
    ClaimType:
      type: string
      description: Tipo de reivindicação
      enum:
      - OWNERSHIP
      - PORTABILITY
    ClaimOperationReason:
      type: string
      description: Razão da operação
      enum:
      - USER_REQUESTED
      - ACCOUNT_CLOSURE
      - FRAUD
      - DEFAULT_OPERATION
    Claim:
      required:
      - Claimer
      - ClaimerAccount
      - Key
      - KeyType
      - Type
      type: object
      properties:
        Type:
          type: string
          description: Tipo de reivindicação
          enum:
          - OWNERSHIP
          - PORTABILITY
        Key:
          $ref: '#/components/schemas/Entry/properties/Key'
        KeyType:
          allOf:
          - $ref: '#/components/schemas/Entry/properties/KeyType'
          - description: Tipo de chave. CPF e CNPJ são inválidos, não podem ter posse
              reivindicada.
        ClaimerAccount:
          $ref: '#/components/schemas/Entry/properties/Account'
        Claimer:
          discriminator:
            propertyName: Type
            mapping:
              NATURAL_PERSON: '#/NaturalPerson'
              LEGAL_PERSON: '#/LegalPerson'
          oneOf:
          - $ref: '#/components/schemas/Entry/properties/Owner/oneOf/0'
          - $ref: '#/components/schemas/Entry/properties/Owner/oneOf/1'
      example:
        Type: OWNERSHIP
        ClaimerAccount: '{}'
        KeyType: ""
        Claimer: ""
        Key: "12345678901"
    ExtendedClaim:
      allOf:
      - required:
        - Claimer
        - ClaimerAccount
        - Key
        - KeyType
        - Type
        type: object
        properties:
          Type:
            type: string
            description: Tipo de reivindicação
            enum:
            - OWNERSHIP
            - PORTABILITY
          Key:
            $ref: '#/components/schemas/Entry/properties/Key'
          KeyType:
            allOf:
            - $ref: '#/components/schemas/Entry/properties/KeyType'
            - description: Tipo de chave. CPF e CNPJ são inválidos, não podem ter
                posse reivindicada.
          ClaimerAccount:
            $ref: '#/components/schemas/Entry/properties/Account'
          Claimer:
            discriminator:
              propertyName: Type
              mapping:
                NATURAL_PERSON: '#/NaturalPerson'
                LEGAL_PERSON: '#/LegalPerson'
            oneOf:
            - $ref: '#/components/schemas/Entry/properties/Owner/oneOf/0'
            - $ref: '#/components/schemas/Entry/properties/Owner/oneOf/1'
      - required:
        - Donor
        - Id
        - LastModified
        - ResolutionPeriodEnd
        - Status
        type: object
        properties:
          DonorParticipant:
            allOf:
            - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
            - description: Identificador SPB do participante que doa a chave reinvidicada
          Id:
            type: string
            format: uuid
          Status:
            type: string
            enum:
            - OPEN
            - WAITING_RESOLUTION
            - CONFIRMED
            - CANCELLED
            - COMPLETED
          ResolutionPeriodEnd:
            type: string
            description: Data-hora quando termina o período de resolução.
            format: date-time
          CompletionPeriodEnd:
            type: string
            description: Data-hora quando termina o período de encerramento. Apenas
              para reivindicação de posse.
            format: date-time
          LastModified:
            type: string
            description: Data-hora da última modificação do status da reivindicação
            format: date-time
        xml:
          name: Claim
    Cid:
      pattern: ^[0-9a-f]{64}$
      type: string
      description: Identificador de conteúdo
    CidSetEventType:
      type: string
      enum:
      - ADDED
      - REMOVED
    CidSetEvent:
      type: object
      properties:
        Type:
          type: string
          enum:
          - ADDED
          - REMOVED
        Cid:
          pattern: ^[0-9a-f]{64}$
          type: string
          description: Identificador de conteúdo
        Timestamp:
          type: string
          description: Data-hora do evento
          format: date-time
    RequestId:
      type: string
      description: Chave de idempotência da requisição. UUID versão 4.
      format: uuid
    SyncVerificationResult:
      type: string
      enum:
      - OK
      - NOK
    SyncVerifier:
      pattern: ^[0-9a-f]{64}$
      type: string
      example: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    SyncVerification:
      required:
      - KeyType
      - Participant
      - SyncVerifier
      type: object
      properties:
        Participant:
          allOf:
          - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
          - description: Identificador SPB do participante custodiante das chaves
        KeyType:
          $ref: '#/components/schemas/Entry/properties/KeyType'
        ParticipantSyncVerifier:
          allOf:
          - pattern: ^[0-9a-f]{64}$
            type: string
            example: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
          - description: Verificador de sincronismo calculado pelo participante
    ExtendedSyncVerification:
      allOf:
      - required:
        - KeyType
        - Participant
        - SyncVerifier
        type: object
        properties:
          Participant:
            allOf:
            - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
            - description: Identificador SPB do participante custodiante das chaves
          KeyType:
            $ref: '#/components/schemas/Entry/properties/KeyType'
          ParticipantSyncVerifier:
            allOf:
            - pattern: ^[0-9a-f]{64}$
              type: string
              example: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
            - description: Verificador de sincronismo calculado pelo participante
      - required:
        - Id
        - Result
        type: object
        properties:
          Id:
            type: integer
          Result:
            type: string
            enum:
            - OK
            - NOK
        xml:
          name: SyncVerification
    FileStatus:
      type: string
      description: Status de geração do arquivo.
      example: AVAILABLE
      enum:
      - REQUESTED
      - PROCESSING
      - AVAILABLE
      - ERROR
    CidSetFile:
      required:
      - Id
      - KeyType
      - Participant
      - RequestTime
      - Status
      type: object
      properties:
        Id:
          type: integer
        Status:
          allOf:
          - type: string
            description: Status de geração do arquivo.
            example: AVAILABLE
            enum:
            - REQUESTED
            - PROCESSING
            - AVAILABLE
            - ERROR
          - description: Status de geração do arquivo de CIDs
        Participant:
          allOf:
          - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
          - description: Identificador SPB do participante custodiante das chaves
        KeyType:
          $ref: '#/components/schemas/Entry/properties/KeyType'
        RequestTime:
          type: string
          description: Data-hora de solicitação da geração do arquivo.
          format: date-time
        CreationTime:
          type: string
          description: Data-hora em que o arquivo foi gerado. Presente quando status
            for `AVAILABLE`.
          format: date-time
        Url:
          maxLength: 500
          type: string
          description: URL para download do arquivo. Presente quando status for `AVAILABLE`.
          example: https://alguma_url.algum_dominio/algum_path/nome_do_arquivo_gerado_pelo_dict.tipo
        Bytes:
          type: integer
          description: Tamanho do arquivo. Presente quando status for `AVAILABLE`.
        Sha256:
          pattern: ^[0-9a-f]{64}$
          type: string
          description: SHA256 do conteúdo do arquivo. Presente quando status for `AVAILABLE`.
          example: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      example:
        Status: ""
        Bytes: 6
        Participant: ""
        KeyType: CPF
        CreationTime: 2000-01-23T04:56:07.000+00:00
        RequestTime: 2000-01-23T04:56:07.000+00:00
        Id: 0
        Url: https://alguma_url.algum_dominio/algum_path/nome_do_arquivo_gerado_pelo_dict.tipo
        Sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    Counter:
      type: object
      properties:
        type:
          type: string
          description: Tipo do contador.
          xml:
            attribute: true
          enum:
          - SETTLEMENTS
          - REPORTED_FRAUDS
          - REPORTED_AML_CFT
          - CONFIRMED_FRAUDS
          - CONFIRMED_AML_CFT
        by:
          type: string
          description: Agregador (chave, dono ou conta).
          xml:
            attribute: true
          enum:
          - KEY
          - OWNER
          - ACCOUNT
        d3:
          type: integer
          description: Valor para os últimos 3 dias
          xml:
            attribute: true
        d30:
          type: integer
          description: Valor para os últimos 30 dias
          xml:
            attribute: true
        m6:
          type: integer
          description: Valor para os últimos 6 meses (sem contar o mês corrente)
          xml:
            attribute: true
      description: Contador de eventos agregados por tipo em diversas janelas temporais.
    Statistics:
      type: object
      properties:
        LastUpdated:
          type: string
          description: data-hora da última atualização dos dados antifraude
          format: date-time
        Counters:
          type: array
          description: Contadores de eventos de algum tipo
          items:
            $ref: '#/components/schemas/Statistics_Counters'
      description: Dados de estatísticos relacionados à chave, ao dono ou à conta
    DisputeReason:
      type: string
      description: Motivo da disputa
      enum:
      - FRAUD
      - ERROR
      - AML_CTF
      - USER_REQUESTED
    DisputeStatus:
      type: string
      enum:
      - OPEN
      - ACKNOWLEDGED
      - CLOSED
      - CANCELLED
    MoneyAmount:
      pattern: ^[0-9]+\.[0-9]{2}$
      type: string
    Dispute:
      required:
      - DisputedAmount
      - DisputedTransactionId
      - Reason
      type: object
      properties:
        DisputedTransactionId:
          pattern: \w{32}
          type: string
          description: Identificador da transação que está sendo disputada
          example: E9999901012341234123412345678900
        Reason:
          type: string
          description: Motivo da disputa
          enum:
          - FRAUD
          - ERROR
          - AML_CTF
          - USER_REQUESTED
        DisputedAmount:
          pattern: ^[0-9]+\.[0-9]{2}$
          type: string
        Details:
          maxLength: 2000
          description: Detalhes que possam ajudar o participante recebedor a analisar
            a disputa
      description: Disputa de transação já liquidada
      example:
        DisputedAmount: DisputedAmount
        Details: ""
        DisputedTransactionId: E9999901012341234123412345678900
        Reason: FRAUD
    ResolutionResult:
      type: string
      description: Resultado da resolução da disputa
      enum:
      - ACCEPTED
      - REJECTED
    RefundType:
      type: string
      description: Tipo de devolução
      enum:
      - FULL
      - PARTIAL
      - NO_REFUND
    Resolution:
      required:
      - RefundType
      - Result
      type: object
      properties:
        Result:
          type: string
          description: Resultado da resolução da disputa
          enum:
          - ACCEPTED
          - REJECTED
        RefundType:
          type: string
          description: Tipo de devolução
          enum:
          - FULL
          - PARTIAL
          - NO_REFUND
        RefundTransactionId:
          pattern: ^\w{32}$
          type: string
          description: Identificador da transação de devolução
          example: E9999901012341234123412345678900
        Details:
          maxLength: 2000
          description: Detalhes sobre a análise realizada
    ExtendedDispute:
      allOf:
      - required:
        - DisputedAmount
        - DisputedTransactionId
        - Reason
        type: object
        properties:
          DisputedTransactionId:
            pattern: \w{32}
            type: string
            description: Identificador da transação que está sendo disputada
            example: E9999901012341234123412345678900
          Reason:
            type: string
            description: Motivo da disputa
            enum:
            - FRAUD
            - ERROR
            - AML_CTF
            - USER_REQUESTED
          DisputedAmount:
            pattern: ^[0-9]+\.[0-9]{2}$
            type: string
          Details:
            maxLength: 2000
            description: Detalhes que possam ajudar o participante recebedor a analisar
              a disputa
        description: Disputa de transação já liquidada
      - required:
        - CreationTime
        - DisputedParticipant
        - Id
        - LastModified
        - PayerParticipant
        - Status
        type: object
        properties:
          Id:
            type: string
            format: uuid
          Status:
            type: string
            enum:
            - OPEN
            - ACKNOWLEDGED
            - CLOSED
            - CANCELLED
          PayerParticipant:
            allOf:
            - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
            - description: Identificador SPB do participante do pagador, iniciador
                da disputa
          DisputedParticipant:
            allOf:
            - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
            - description: Identificador SPB do participante do recebedor, que analisará
                a disputa
          CreationTime:
            type: string
            description: Data-hora da criação da disputa
            format: date-time
          LastModified:
            type: string
            description: Data-hora da última atualização de status
            format: date-time
          Resolution:
            $ref: '#/components/schemas/ExtendedDispute_Resolution'
        xml:
          name: Dispute
    CreateCidSetFileRequest:
      required:
      - KeyType
      - Participant
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Participant:
          allOf:
          - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
          - description: Identificador SPB do participante custodiante das chaves
        KeyType:
          $ref: '#/components/schemas/Entry/properties/KeyType'
    CreateCidSetFileResponse:
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        CidSetFile:
          $ref: '#/components/schemas/CreateCidSetFileResponse_CidSetFile'
      example:
        CidSetFile:
          Status: ""
          Bytes: 6
          Participant: ""
          KeyType: CPF
          CreationTime: 2000-01-23T04:56:07.000+00:00
          RequestTime: 2000-01-23T04:56:07.000+00:00
          Id: 0
          Url: https://alguma_url.algum_dominio/algum_path/nome_do_arquivo_gerado_pelo_dict.tipo
          Sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        Signature: {}
    GetCidSetFileResponse:
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        CidSetFile:
          $ref: '#/components/schemas/CreateCidSetFileResponse/properties/CidSetFile'
      example:
        CidSetFile:
          Status: ""
          Bytes: 6
          Participant: ""
          KeyType: CPF
          CreationTime: 2000-01-23T04:56:07.000+00:00
          RequestTime: 2000-01-23T04:56:07.000+00:00
          Id: 0
          Url: https://alguma_url.algum_dominio/algum_path/nome_do_arquivo_gerado_pelo_dict.tipo
          Sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        Signature: {}
    CreateSyncVerificationRequest:
      required:
      - SyncVerification
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        SyncVerification:
          $ref: '#/components/schemas/ExtendedSyncVerification/allOf/0'
    CreateSyncVerificationResponse:
      required:
      - SyncVerification
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        SyncVerification:
          allOf:
          - required:
            - KeyType
            - Participant
            - SyncVerifier
            type: object
            properties:
              Participant:
                allOf:
                - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
                - description: Identificador SPB do participante custodiante das chaves
              KeyType:
                $ref: '#/components/schemas/Entry/properties/KeyType'
              ParticipantSyncVerifier:
                allOf:
                - pattern: ^[0-9a-f]{64}$
                  type: string
                  example: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
                - description: Verificador de sincronismo calculado pelo participante
          - required:
            - Id
            - Result
            type: object
            properties:
              Id:
                type: integer
              Result:
                type: string
                enum:
                - OK
                - NOK
            xml:
              name: SyncVerification
      example:
        Signature: {}
        SyncVerification: ""
    ListCidSetEventsResponse:
      required:
      - EndTime
      - KeyType
      - Participant
      - StartTime
      - SyncVerifierEnd
      - SyncVerifierStart
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        HasMoreElements:
          type: boolean
          description: Existem mais elementos para iterar
        Participant:
          allOf:
          - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
          - description: Identificador SPB do participante custodiante das chaves
        KeyType:
          $ref: '#/components/schemas/Entry/properties/KeyType'
        StartTime:
          type: string
          description: Data-hora do primeiro evento da lista
          format: date-time
        EndTime:
          type: string
          description: Data-hora do último evento da lista
          format: date-time
        SyncVerifierStart:
          allOf:
          - $ref: '#/components/schemas/SyncVerification/properties/ParticipantSyncVerifier/allOf/0'
          - description: Verificador de sincronismo antes do primeiro evento
        SyncVerifierEnd:
          allOf:
          - $ref: '#/components/schemas/SyncVerification/properties/ParticipantSyncVerifier/allOf/0'
          - description: Verificador de sincronismo após último evento
        CidSetEvents:
          type: array
          items:
            $ref: '#/components/schemas/ListCidSetEventsResponse_CidSetEvents'
      example:
        HasMoreElements: true
        Participant: ""
        KeyType: CPF
        EndTime: 2000-01-23T04:56:07.000+00:00
        Signature: {}
        StartTime: 2000-01-23T04:56:07.000+00:00
        SyncVerifierStart: ""
        SyncVerifierEnd: ""
        CidSetEvents:
        - Type: ADDED
          Timestamp: 2000-01-23T04:56:07.000+00:00
          Cid: Cid
        - Type: ADDED
          Timestamp: 2000-01-23T04:56:07.000+00:00
          Cid: Cid
    GetEntryByCidResponse:
      required:
      - Cid
      - Entry
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Cid:
          $ref: '#/components/schemas/CidSetEvent/properties/Cid'
        Entry:
          allOf:
          - required:
            - Account
            - KeyType
            - Owner
            type: object
            properties:
              Key:
                maxLength: 77
                type: string
                description: Chave de endereçamento
                example: "12345678901"
              KeyType:
                type: string
                description: Tipo de chave. _Novos tipos podem surgir_.
                example: CPF
                enum:
                - CPF
                - CNPJ
                - PHONE
                - EMAIL
                - EVP
              Account:
                required:
                - AccountNumber
                - AccountType
                - OpeningDate
                - Participant
                type: object
                properties:
                  Participant:
                    allOf:
                    - pattern: ^[0-9]{8}$
                      type: string
                      example: "12345678"
                    - description: Identificador SPB do provedor da conta
                  Branch:
                    pattern: ^[0-9]{1,4}$
                    type: string
                    description: Agência, sem dígito verificador.
                    example: "0001"
                  AccountNumber:
                    pattern: ^[0-9]{1,20}$
                    type: string
                    description: Número de conta, incluindo verificador. Se verificador
                      for letra, substituir por 0.
                    example: "0007654321"
                  AccountType:
                    pattern: ^[A-Z]{4}$
                    type: string
                    description: Tipo de conta, conforme dicionário de domínio para
                      a mensagem pacs.008 do SPI.
                    example: CACC
                    enum:
                    - CACC
                    - SLRY
                    - SVGS
                  OpeningDate:
                    type: string
                    description: Data de abertura da conta. Para o horário, caso não
                      seja conhecido, convenciona-se o início do dia em BRT
                    format: date-time
                description: Dados de conta transacional no Brasil.
              Owner:
                discriminator:
                  propertyName: Type
                  mapping:
                    NATURAL_PERSON: '#/NaturalPerson'
                    LEGAL_PERSON: '#/LegalPerson'
                oneOf:
                - required:
                  - Name
                  - TaxIdNumber
                  - Type
                  type: object
                  properties:
                    Type:
                      type: string
                      default: NATURAL_PERSON
                    TaxIdNumber:
                      pattern: ^[0-9]{11}$
                      type: string
                      description: CPF - Cadastro de Pessoa Física
                      example: "11122233300"
                    Name:
                      maxLength: 100
                      pattern: ^(?=[\u000A\u000D\u0020-\u007E\u0085\u00A0-\u00FF])[\p{L}\-
                        ]+$
                      type: string
                      description: Nome completo
                      example: João Silva
                - required:
                  - Name
                  - TaxIdNumber
                  - Type
                  type: object
                  properties:
                    Type:
                      type: string
                      default: LEGAL_PERSON
                    TaxIdNumber:
                      pattern: '[0-9]{14}'
                      type: string
                      description: CNPJ - Cadastro Nacional de Pessoa Jurídica
                      example: "11222333000150"
                    Name:
                      maxLength: 100
                      pattern: ^(?=[\u000A\u000D\u0020-\u007E\u0085\u00A0-\u00FF])[\p{L}\d\'\-\&\.\,\/\\
                        ]+$
                      type: string
                      description: Razão social.
                      example: Padaria Tres Irmãos Ltda
                    TradeName:
                      maxLength: 100
                      pattern: ^(?=[\u000A\u000D\u0020-\u007E\u0085\u00A0-\u00FF])[\p{L}\d\'\-\&\.\,\/\\
                        ]+$
                      type: string
                      description: Nome fantasia.
                      example: Padaria 3 Irmãos
            description: Vínculo entre uma chave de endereçamento, conta transacional
              e seu dono.
          - required:
            - CreationDate
            - Key
            - KeyOwnershipDate
            type: object
            properties:
              CreationDate:
                type: string
                description: Data de criação do vínculo.
                format: date-time
              KeyOwnershipDate:
                type: string
                description: "Data a partir da qual o dono tem posse ininterrupta\
                  \ da chave de endereçamento. \nPosse da chave aqui é definida pela\
                  \ existência de um vínculo associando a chave ao dono, \npossivelmente\
                  \ com contas distintas."
                format: date-time
            xml:
              name: Entry
      example:
        Entry: ""
        Signature: {}
        Cid: Cid
    CreateClaimRequest:
      required:
      - Claim
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Claim:
          $ref: '#/components/schemas/ExtendedClaim/allOf/0'
    CreateClaimResponse:
      required:
      - Claim
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Claim:
          allOf:
          - required:
            - Claimer
            - ClaimerAccount
            - Key
            - KeyType
            - Type
            type: object
            properties:
              Type:
                type: string
                description: Tipo de reivindicação
                enum:
                - OWNERSHIP
                - PORTABILITY
              Key:
                $ref: '#/components/schemas/Entry/properties/Key'
              KeyType:
                allOf:
                - $ref: '#/components/schemas/Entry/properties/KeyType'
                - description: Tipo de chave. CPF e CNPJ são inválidos, não podem
                    ter posse reivindicada.
              ClaimerAccount:
                $ref: '#/components/schemas/Entry/properties/Account'
              Claimer:
                discriminator:
                  propertyName: Type
                  mapping:
                    NATURAL_PERSON: '#/NaturalPerson'
                    LEGAL_PERSON: '#/LegalPerson'
                oneOf:
                - $ref: '#/components/schemas/Entry/properties/Owner/oneOf/0'
                - $ref: '#/components/schemas/Entry/properties/Owner/oneOf/1'
          - required:
            - Donor
            - Id
            - LastModified
            - ResolutionPeriodEnd
            - Status
            type: object
            properties:
              DonorParticipant:
                allOf:
                - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
                - description: Identificador SPB do participante que doa a chave reinvidicada
              Id:
                type: string
                format: uuid
              Status:
                type: string
                enum:
                - OPEN
                - WAITING_RESOLUTION
                - CONFIRMED
                - CANCELLED
                - COMPLETED
              ResolutionPeriodEnd:
                type: string
                description: Data-hora quando termina o período de resolução.
                format: date-time
              CompletionPeriodEnd:
                type: string
                description: Data-hora quando termina o período de encerramento. Apenas
                  para reivindicação de posse.
                format: date-time
              LastModified:
                type: string
                description: Data-hora da última modificação do status da reivindicação
                format: date-time
            xml:
              name: Claim
      example:
        Signature: {}
        Claim: ""
    AcknowledgeClaimRequest:
      required:
      - ClaimId
      - Participant
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        ClaimId:
          type: string
          format: uuid
        Participant:
          allOf:
          - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
          - description: Identificador SPB do doador
    AcknowledgeClaimResponse:
      required:
      - Claim
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Claim:
          $ref: '#/components/schemas/CreateClaimResponse/properties/Claim'
      example:
        Signature: {}
        Claim:
          Type: OWNERSHIP
          ClaimerAccount: '{}'
          KeyType: ""
          Claimer: ""
          Key: "12345678901"
    ConfirmClaimRequest:
      required:
      - ClaimId
      - Participant
      - Reason
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        ClaimId:
          type: string
          format: uuid
        Participant:
          allOf:
          - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
          - description: Identificador SPB do doador
        Reason:
          type: string
          description: Razão da operação
          enum:
          - USER_REQUESTED
          - ACCOUNT_CLOSURE
          - FRAUD
          - DEFAULT_OPERATION
    ConfirmClaimResponse:
      required:
      - Claim
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Claim:
          $ref: '#/components/schemas/CreateClaimResponse/properties/Claim'
      example:
        Signature: {}
        Claim:
          Type: OWNERSHIP
          ClaimerAccount: '{}'
          KeyType: ""
          Claimer: ""
          Key: "12345678901"
    CancelClaimRequest:
      required:
      - ClaimId
      - Participant
      - Reason
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        ClaimId:
          type: string
          format: uuid
        Participant:
          allOf:
          - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
          - description: Identificador SPB do doador ou reivindicador
        Reason:
          $ref: '#/components/schemas/ConfirmClaimRequest/properties/Reason'
    CancelClaimResponse:
      required:
      - Claim
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Claim:
          $ref: '#/components/schemas/CreateClaimResponse/properties/Claim'
      example:
        Signature: {}
        Claim:
          Type: OWNERSHIP
          ClaimerAccount: '{}'
          KeyType: ""
          Claimer: ""
          Key: "12345678901"
    CompleteClaimRequest:
      required:
      - ClaimId
      - Participant
      - RequestId
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        ClaimId:
          type: string
          format: uuid
        Participant:
          allOf:
          - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
          - description: Identificador SPB do reivindicador
        RequestId:
          type: string
          description: Chave de idempotência da requisição. UUID versão 4.
          format: uuid
    CompleteClaimResponse:
      required:
      - Claim
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Claim:
          $ref: '#/components/schemas/CreateClaimResponse/properties/Claim'
      example:
        Signature: {}
        Claim:
          Type: OWNERSHIP
          ClaimerAccount: '{}'
          KeyType: ""
          Claimer: ""
          Key: "12345678901"
    GetClaimResponse:
      required:
      - Claim
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Claim:
          $ref: '#/components/schemas/CreateClaimResponse/properties/Claim'
      example:
        Signature: {}
        Claim:
          Type: OWNERSHIP
          ClaimerAccount: '{}'
          KeyType: ""
          Claimer: ""
          Key: "12345678901"
    ListClaimsResponse:
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        HasMoreElements:
          type: boolean
          description: Existem mais elementos para iterar
        Claims:
          type: array
          items:
            $ref: '#/components/schemas/CreateClaimResponse/properties/Claim'
      example:
        Claims:
        - Type: OWNERSHIP
          ClaimerAccount: '{}'
          KeyType: ""
          Claimer: ""
          Key: "12345678901"
        - Type: OWNERSHIP
          ClaimerAccount: '{}'
          KeyType: ""
          Claimer: ""
          Key: "12345678901"
        HasMoreElements: true
        Signature: {}
    CreateEntryRequest:
      required:
      - Entry
      - Reason
      - RequestId
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Entry:
          $ref: '#/components/schemas/ExtendedEntry/allOf/0'
        Reason:
          allOf:
          - type: string
            enum:
            - USER_REQUESTED
            - ACCOUNT_CLOSURE
            - BRANCH_TRANSFER
            - ENTRY_INACTIVITY
            - RECONCILIATION
            - FRAUD
          - description: 'Valores válidos: `USER_REQUESTED` e `RECONCILIATION`'
        RequestId:
          $ref: '#/components/schemas/CompleteClaimRequest/properties/RequestId'
    UpdateEntryRequest:
      required:
      - Account
      - Key
      - Reason
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Key:
          $ref: '#/components/schemas/Entry/properties/Key'
        Account:
          $ref: '#/components/schemas/Entry/properties/Account'
        Reason:
          allOf:
          - $ref: '#/components/schemas/CreateEntryRequest/properties/Reason/allOf/0'
          - description: 'Valores válidos: `USER_REQUESTED`, `BRANCH_TRANSFER` e `RECONCILIATION`'
    UpdateEntryResponse:
      required:
      - Entry
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Entry:
          $ref: '#/components/schemas/GetEntryByCidResponse/properties/Entry'
      example:
        Entry:
          Account:
            OpeningDate: 2000-01-23T04:56:07.000+00:00
            Participant: ""
            Branch: "0001"
            AccountType: CACC
            AccountNumber: "0007654321"
          Owner: ""
          KeyType: CPF
          Key: "12345678901"
        Signature: {}
    CreateEntryResponse:
      required:
      - Entry
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Entry:
          $ref: '#/components/schemas/GetEntryByCidResponse/properties/Entry'
      example:
        Entry:
          Account:
            OpeningDate: 2000-01-23T04:56:07.000+00:00
            Participant: ""
            Branch: "0001"
            AccountType: CACC
            AccountNumber: "0007654321"
          Owner: ""
          KeyType: CPF
          Key: "12345678901"
        Signature: {}
    DeleteEntryRequest:
      required:
      - Key
      - Participant
      - Reason
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Key:
          $ref: '#/components/schemas/Entry/properties/Key'
        Participant:
          allOf:
          - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
          - description: Identificador SPB do provedor da conta ao qual a chave está
              vinculada
        Reason:
          allOf:
          - $ref: '#/components/schemas/CreateEntryRequest/properties/Reason/allOf/0'
          - description: 'Valores válidos: `USER_REQUESTED`, `ACCOUNT_CLOSURE`, `ENTRY_INACTIVITY`,
              `RECONCILIATION` e `FRAUD`'
    DeleteEntryResponse:
      required:
      - Key
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Key:
          $ref: '#/components/schemas/Entry/properties/Key'
      example:
        Signature: {}
        Key: "12345678901"
    GetEntryResponse:
      required:
      - Entry
      - Statistics
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Entry:
          $ref: '#/components/schemas/GetEntryByCidResponse/properties/Entry'
        Statistics:
          $ref: '#/components/schemas/GetEntryResponse_Statistics'
      example:
        Entry:
          Account:
            OpeningDate: 2000-01-23T04:56:07.000+00:00
            Participant: ""
            Branch: "0001"
            AccountType: CACC
            AccountNumber: "0007654321"
          Owner: ""
          KeyType: CPF
          Key: "12345678901"
        Signature: {}
        Statistics:
          Counters:
          - d30: 6
            by: KEY
            m6: 1
            type: SETTLEMENTS
            d3: 0
          - d30: 6
            by: KEY
            m6: 1
            type: SETTLEMENTS
            d3: 0
          LastUpdated: 2000-01-23T04:56:07.000+00:00
    CreateDisputeRequest:
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Participant:
          allOf:
          - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
          - description: Identificador SPB do participante do pagador, iniciador da
              disputa
        Dispute:
          $ref: '#/components/schemas/ExtendedDispute/allOf/0'
    CreateDisputeResponse:
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Dispute:
          allOf:
          - required:
            - DisputedAmount
            - DisputedTransactionId
            - Reason
            type: object
            properties:
              DisputedTransactionId:
                pattern: \w{32}
                type: string
                description: Identificador da transação que está sendo disputada
                example: E9999901012341234123412345678900
              Reason:
                type: string
                description: Motivo da disputa
                enum:
                - FRAUD
                - ERROR
                - AML_CTF
                - USER_REQUESTED
              DisputedAmount:
                pattern: ^[0-9]+\.[0-9]{2}$
                type: string
              Details:
                maxLength: 2000
                description: Detalhes que possam ajudar o participante recebedor a
                  analisar a disputa
            description: Disputa de transação já liquidada
          - required:
            - CreationTime
            - DisputedParticipant
            - Id
            - LastModified
            - PayerParticipant
            - Status
            type: object
            properties:
              Id:
                type: string
                format: uuid
              Status:
                type: string
                enum:
                - OPEN
                - ACKNOWLEDGED
                - CLOSED
                - CANCELLED
              PayerParticipant:
                allOf:
                - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
                - description: Identificador SPB do participante do pagador, iniciador
                    da disputa
              DisputedParticipant:
                allOf:
                - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
                - description: Identificador SPB do participante do recebedor, que
                    analisará a disputa
              CreationTime:
                type: string
                description: Data-hora da criação da disputa
                format: date-time
              LastModified:
                type: string
                description: Data-hora da última atualização de status
                format: date-time
              Resolution:
                required:
                - RefundType
                - Result
                type: object
                properties:
                  Result:
                    type: string
                    description: Resultado da resolução da disputa
                    enum:
                    - ACCEPTED
                    - REJECTED
                  RefundType:
                    type: string
                    description: Tipo de devolução
                    enum:
                    - FULL
                    - PARTIAL
                    - NO_REFUND
                  RefundTransactionId:
                    pattern: ^\w{32}$
                    type: string
                    description: Identificador da transação de devolução
                    example: E9999901012341234123412345678900
                  Details:
                    maxLength: 2000
                    description: Detalhes sobre a análise realizada
            xml:
              name: Dispute
      example:
        Signature: {}
        Dispute: ""
    GetDisputeResponse:
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Dispute:
          $ref: '#/components/schemas/CreateDisputeResponse/properties/Dispute'
      example:
        Signature: {}
        Dispute:
          DisputedAmount: DisputedAmount
          Details: ""
          DisputedTransactionId: E9999901012341234123412345678900
          Reason: FRAUD
    ListDisputesResponse:
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        HasMoreElements:
          type: boolean
          description: Existem mais elementos para iterar
        Disputes:
          type: array
          items:
            $ref: '#/components/schemas/CreateDisputeResponse/properties/Dispute'
      example:
        Disputes:
        - DisputedAmount: DisputedAmount
          Details: ""
          DisputedTransactionId: E9999901012341234123412345678900
          Reason: FRAUD
        - DisputedAmount: DisputedAmount
          Details: ""
          DisputedTransactionId: E9999901012341234123412345678900
          Reason: FRAUD
        HasMoreElements: true
        Signature: {}
    AcknowledgeDisputeRequest:
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        DisputeId:
          type: string
          description: ID da disputa
          format: uuid
        Participant:
          allOf:
          - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
          - description: Identificador SPB do participante do recebedor, que analisará
              a disputa
    AcknowledgeDisputeResponse:
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Dispute:
          $ref: '#/components/schemas/CreateDisputeResponse/properties/Dispute'
      example:
        Signature: {}
        Dispute:
          DisputedAmount: DisputedAmount
          Details: ""
          DisputedTransactionId: E9999901012341234123412345678900
          Reason: FRAUD
    CancelDisputeRequest:
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        DisputeId:
          type: string
          description: ID da disputa
          format: uuid
        Participant:
          allOf:
          - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
          - description: Identificador SPB do participante do pagador, iniciador da
              disputa
    CancelDisputeResponse:
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Dispute:
          $ref: '#/components/schemas/CreateDisputeResponse/properties/Dispute'
      example:
        Signature: {}
        Dispute:
          DisputedAmount: DisputedAmount
          Details: ""
          DisputedTransactionId: E9999901012341234123412345678900
          Reason: FRAUD
    CloseDisputeRequest:
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        DisputeId:
          type: string
          description: ID da disputa
          format: uuid
        Participant:
          allOf:
          - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
          - description: Identificador SPB do participante pagador, que abriu a disputada
        Resolution:
          $ref: '#/components/schemas/ExtendedDispute/allOf/1/properties/Resolution'
    CloseDisputeResponse:
      type: object
      properties:
        Signature:
          type: object
          xml:
            namespace: http://www.w3.org/2000/09/xmldsig#
            prefix: ds
        Dispute:
          $ref: '#/components/schemas/CreateDisputeResponse/properties/Dispute'
      example:
        Signature: {}
        Dispute:
          DisputedAmount: DisputedAmount
          Details: ""
          DisputedTransactionId: E9999901012341234123412345678900
          Reason: FRAUD
    Problem:
      required:
      - status
      - title
      - type
      type: object
      properties:
        type:
          type: string
          format: uri
          example: https://dict.pi.rsfn.net.br/api/v1/error/NotFound
        title:
          type: string
          example: Not found
        status:
          type: integer
          example: 404
        detail:
          type: string
        correlationId:
          type: string
          description: Identificador de correlação do problema para fins de suporte
        violations:
          type: array
          items:
            $ref: '#/components/schemas/Problem_violations'
      xml:
        name: problem
        namespace: urn:ietf:rfc:7807
    Violation:
      required:
      - reason
      type: object
      properties:
        reason:
          type: string
        value:
          type: string
        property:
          type: string
      xml:
        name: violation
    inline_response_404:
      required:
      - status
      - title
      - type
      type: object
      properties:
        type:
          type: string
          format: uri
          example: https://dict.pi.rsfn.net.br/api/v1/error/NotFound
        title:
          type: string
          example: Not found
        status:
          type: integer
          example: 404
        detail:
          type: string
        correlationId:
          type: string
          description: Identificador de correlação do problema para fins de suporte
        violations:
          type: array
          items:
            $ref: '#/components/schemas/Problem_violations'
      xml:
        name: problem
        namespace: urn:ietf:rfc:7807
    Entry_Account:
      required:
      - AccountNumber
      - AccountType
      - OpeningDate
      - Participant
      type: object
      properties:
        Participant:
          allOf:
          - pattern: ^[0-9]{8}$
            type: string
            example: "12345678"
          - description: Identificador SPB do provedor da conta
        Branch:
          pattern: ^[0-9]{1,4}$
          type: string
          description: Agência, sem dígito verificador.
          example: "0001"
        AccountNumber:
          pattern: ^[0-9]{1,20}$
          type: string
          description: Número de conta, incluindo verificador. Se verificador for
            letra, substituir por 0.
          example: "0007654321"
        AccountType:
          pattern: ^[A-Z]{4}$
          type: string
          description: Tipo de conta, conforme dicionário de domínio para a mensagem
            pacs.008 do SPI.
          example: CACC
          enum:
          - CACC
          - SLRY
          - SVGS
        OpeningDate:
          type: string
          description: Data de abertura da conta. Para o horário, caso não seja conhecido,
            convenciona-se o início do dia em BRT
          format: date-time
      description: Dados de conta transacional no Brasil.
      example:
        OpeningDate: 2000-01-23T04:56:07.000+00:00
        Participant: ""
        Branch: "0001"
        AccountType: CACC
        AccountNumber: "0007654321"
    Statistics_Counters:
      type: object
      properties:
        type:
          type: string
          description: Tipo do contador.
          xml:
            attribute: true
          enum:
          - SETTLEMENTS
          - REPORTED_FRAUDS
          - REPORTED_AML_CFT
          - CONFIRMED_FRAUDS
          - CONFIRMED_AML_CFT
        by:
          type: string
          description: Agregador (chave, dono ou conta).
          xml:
            attribute: true
          enum:
          - KEY
          - OWNER
          - ACCOUNT
        d3:
          type: integer
          description: Valor para os últimos 3 dias
          xml:
            attribute: true
        d30:
          type: integer
          description: Valor para os últimos 30 dias
          xml:
            attribute: true
        m6:
          type: integer
          description: Valor para os últimos 6 meses (sem contar o mês corrente)
          xml:
            attribute: true
      description: Contador de eventos agregados por tipo em diversas janelas temporais.
      example:
        d30: 6
        by: KEY
        m6: 1
        type: SETTLEMENTS
        d3: 0
    ExtendedDispute_Resolution:
      required:
      - RefundType
      - Result
      type: object
      properties:
        Result:
          type: string
          description: Resultado da resolução da disputa
          enum:
          - ACCEPTED
          - REJECTED
        RefundType:
          type: string
          description: Tipo de devolução
          enum:
          - FULL
          - PARTIAL
          - NO_REFUND
        RefundTransactionId:
          pattern: ^\w{32}$
          type: string
          description: Identificador da transação de devolução
          example: E9999901012341234123412345678900
        Details:
          maxLength: 2000
          description: Detalhes sobre a análise realizada
    CreateCidSetFileResponse_CidSetFile:
      required:
      - Id
      - KeyType
      - Participant
      - RequestTime
      - Status
      type: object
      properties:
        Id:
          type: integer
        Status:
          allOf:
          - type: string
            description: Status de geração do arquivo.
            example: AVAILABLE
            enum:
            - REQUESTED
            - PROCESSING
            - AVAILABLE
            - ERROR
          - description: Status de geração do arquivo de CIDs
        Participant:
          allOf:
          - $ref: '#/components/schemas/BrazilianAccount/properties/Participant/allOf/0'
          - description: Identificador SPB do participante custodiante das chaves
        KeyType:
          $ref: '#/components/schemas/Entry/properties/KeyType'
        RequestTime:
          type: string
          description: Data-hora de solicitação da geração do arquivo.
          format: date-time
        CreationTime:
          type: string
          description: Data-hora em que o arquivo foi gerado. Presente quando status
            for `AVAILABLE`.
          format: date-time
        Url:
          maxLength: 500
          type: string
          description: URL para download do arquivo. Presente quando status for `AVAILABLE`.
          example: https://alguma_url.algum_dominio/algum_path/nome_do_arquivo_gerado_pelo_dict.tipo
        Bytes:
          type: integer
          description: Tamanho do arquivo. Presente quando status for `AVAILABLE`.
        Sha256:
          pattern: ^[0-9a-f]{64}$
          type: string
          description: SHA256 do conteúdo do arquivo. Presente quando status for `AVAILABLE`.
          example: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      example:
        Status: ""
        Bytes: 6
        Participant: ""
        KeyType: CPF
        CreationTime: 2000-01-23T04:56:07.000+00:00
        RequestTime: 2000-01-23T04:56:07.000+00:00
        Id: 0
        Url: https://alguma_url.algum_dominio/algum_path/nome_do_arquivo_gerado_pelo_dict.tipo
        Sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    ListCidSetEventsResponse_CidSetEvents:
      type: object
      properties:
        Type:
          type: string
          enum:
          - ADDED
          - REMOVED
        Cid:
          pattern: ^[0-9a-f]{64}$
          type: string
          description: Identificador de conteúdo
        Timestamp:
          type: string
          description: Data-hora do evento
          format: date-time
      example:
        Type: ADDED
        Timestamp: 2000-01-23T04:56:07.000+00:00
        Cid: Cid
    GetEntryResponse_Statistics:
      type: object
      properties:
        LastUpdated:
          type: string
          description: data-hora da última atualização dos dados antifraude
          format: date-time
        Counters:
          type: array
          description: Contadores de eventos de algum tipo
          items:
            $ref: '#/components/schemas/Statistics_Counters'
      description: Dados de estatísticos relacionados à chave, ao dono ou à conta
      example:
        Counters:
        - d30: 6
          by: KEY
          m6: 1
          type: SETTLEMENTS
          d3: 0
        - d30: 6
          by: KEY
          m6: 1
          type: SETTLEMENTS
          d3: 0
        LastUpdated: 2000-01-23T04:56:07.000+00:00
    Problem_violations:
      required:
      - reason
      type: object
      properties:
        reason:
          type: string
        value:
          type: string
        property:
          type: string
      xml:
        name: violation
  responses:
    NotFound:
      description: Not found
      content:
        application/problem+xml:
          schema:
            $ref: '#/components/schemas/inline_response_404'
          examples:
            example:
              value: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"\
                urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v1/error/NotFound</type>\n\
                \  <title>Not found</title>\n  <status>404</status>\n  <detail>Entry\
                \ associated with given key does not exist</detail>\n</problem> "
    Forbidden:
      description: Forbidden
      content:
        application/problem+xml:
          schema:
            $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
          examples:
            example:
              value: |-
                <?xml version="1.0" encoding="UTF-8"?>
                <problem xmlns="urn:ietf:rfc:7807">
                  <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>
                  <title>Forbidden</title>
                  <status>403</status>
                  <detail>Participant is not allowed to access this resource</detail>
                </problem>
    RateLimited:
      description: Rate-Limited
      content:
        application/problem+xml:
          schema:
            $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
          examples:
            example:
              value: |-
                <?xml version="1.0" encoding="UTF-8"?>
                <problem xmlns="urn:ietf:rfc:7807">
                  <type>https://dict.pi.rsfn.net.br/api/v1/error/RateLimited</type>
                  <title>Rate limited</title>
                  <status>429</status>
                </problem>
    ServiceUnavailable:
      description: Service Unavailable
      headers:
        Retry-After:
          description: Tempo de espera em segundos sugerido para nova requisição.
            Ver [rfc7231#section-7.1.3](https://tools.ietf.org/html/rfc7231#section-7.1.3)
          style: simple
          explode: false
          schema:
            type: integer
      content:
        application/problem+xml:
          schema:
            $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
          examples:
            example:
              value: |-
                <?xml version="1.0" encoding="UTF-8"?>
                <problem xmlns="urn:ietf:rfc:7807">
                  <type>https://dict.pi.rsfn.net.br/api/v1/error/ServiceUnavailable</type>
                  <title>Service Unavailable</title>
                  <status>503</status>
                  <detail>Service is under scheduled maintenance</detail>
                </problem>
    ClaimInvalid:
      description: Claim Invalid
      content:
        application/problem+xml:
          schema:
            $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
          examples:
            example:
              value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"\
                ?>\n<problem xmlns=\"urn:ietf:rfc:7807\">\n    <type>https://dict.pi.rsfn.net.br/api/v1/error/ClaimInvalid</type>\n\
                \    <title>Claim is invalid</title>\n    <status>400</status>\n \
                \   <detail>Claim has invalid fields</detail>\n    <violations>\n\
                \        <violation>\n            <reason>Value does not match regex\
                \ '^\\+[1-9]\\d{1,14}$'</reason>\n            <value>61988887777</value>\n\
                \            <property>claim.key</property>\n        </violation>\n\
                \    </violations>                    \n</problem>"
    DisputeInvalid:
      description: Dispute Invalid
      content:
        application/problem+xml:
          schema:
            $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
          examples:
            example:
              value: |-
                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                <problem xmlns="urn:ietf:rfc:7807">
                    <type>https://dict.pi.rsfn.net.br/api/v1/error/DisputeInvalid</type>
                    <title>Dispute is invalid</title>
                    <status>400</status>
                    <detail>Dispute has invalid fields</detail>
                    <violations>
                        <violation>
                            <reason>EndToEndId does not match regex '^\w{32}'</reason>
                            <value>9901012341234123412345678900</value>
                            <property>dispute.endToEndId</property>
                        </violation>
                    </violations>
                </problem>
    EntryInvalid:
      description: Entry Invalid
      content:
        application/problem+xml:
          schema:
            $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
          examples:
            example:
              value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"\
                ?>\n<problem xmlns=\"urn:ietf:rfc:7807\">\n    <type>https://dict.pi.rsfn.net.br/api/v1/error/EntryInvalid</type>\n\
                \    <title>Entry is invalid</title>\n    <status>400</status>\n \
                \   <detail>Entry has invalid fields</detail>\n    <violations>\n\
                \        <violation>\n            <reason>Value does not match regex\
                \ '^\\+[1-9]\\d{1,14}$'</reason>\n            <value>61988887777</value>\n\
                \            <property>entry.key</property>\n        </violation>\n\
                \    </violations>                    \n</problem>"
    BadRequest:
      description: Bad Request
      content:
        application/problem+xml:
          schema:
            $ref: '#/components/responses/NotFound/content/application~1problem%2Bxml/schema'
          examples:
            example:
              value: |-
                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                <problem xmlns="urn:ietf:rfc:7807">
                    <type>https://dict.pi.rsfn.net.br/api/v1/error/BadRequest</type>
                    <title>Bad Request</title>
                    <status>400</status>
                    <detail>Could not parse request body</detail>
                </problem>

